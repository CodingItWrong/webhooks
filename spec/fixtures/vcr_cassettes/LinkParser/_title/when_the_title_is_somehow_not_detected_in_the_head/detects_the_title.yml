---
http_interactions:
- request:
    method: get
    uri: https://leanpub.com/mobprogramming
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Date:
      - Mon, 24 Apr 2023 11:17:22 GMT
      Server:
      - nginx
      Last-Modified:
      - Mon, 24 Apr 2023 01:41:22 GMT
      Etag:
      - W/"6445de42-20e3b"
      Access-Control-Allow-Credentials:
      - 'true'
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 a4294eb914e3f883aba658e8044fe4f2.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P1
      X-Amz-Cf-Id:
      - 9m71lFg9bAFKtpvHGMa3_jSgvQmqYw9uPj2qzhz7uIXvGpMIg3RnxA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]> <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]> <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 9]><!--><html class='no-js' lang='en'><!--<![endif]--><head>
<meta content='IE=edge' http-equiv='X-UA-Compatible'>
<meta charset='utf-8'>
<meta content='width=device-width, initial-scale=1.0, maximum-scale=1, minimum-scale=1, user-scalable=no' name='viewport'>
<meta content='en' name='Content-Language'>
<link rel="stylesheet" media="screen" href="https://leanpub.com/assets/stylesheets/app-bundle-96e9e265a3610bd65e3a.css" />
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://leanpub.com/assets/favicons/apple-touch-icon-57x57-3dc48b9be1873ac9bf6d580e7836e3e5.png" sizes="57x57" />
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://leanpub.com/assets/favicons/apple-touch-icon-60x60-06b95deca3f378372b051ca8ea42cfbd.png" sizes="60x60" />
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://leanpub.com/assets/favicons/apple-touch-icon-72x72-935ba702f9d3da9b4404aa2b797920e5.png" sizes="72x72" />
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://leanpub.com/assets/favicons/apple-touch-icon-76x76-937dbc8b688db389b5b872c5ffdffe2d.png" sizes="76x76" />
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://leanpub.com/assets/favicons/apple-touch-icon-114x114-9db66ed49dfe9c3ed799923955da36e2.png" sizes="114x114" />
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://leanpub.com/assets/favicons/apple-touch-icon-120x120-3fd2359930103db35eb499036b81ba90.png" sizes="120x120" />
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://leanpub.com/assets/favicons/apple-touch-icon-144x144-5bee791d2b53cc426eb14e7f6e40a024.png" sizes="144x144" />
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://leanpub.com/assets/favicons/apple-touch-icon-152x152-af69d0ec0fe11cf82324b06ff9a56e3b.png" sizes="152x152" />
<link rel="icon" type="image/png" href="https://leanpub.com/assets/favicons/favicon-16x16-19545df363d1089bccdc59d17ee5b781.png" sizes="16x16" />
<link rel="icon" type="image/png" href="https://leanpub.com/assets/favicons/favicon-32x32-9a0898109481d6450269c966cdf6a2d7.png" sizes="32x32" />
<link rel="icon" type="image/png" href="https://leanpub.com/assets/favicons/favicon-96x96-98f4372a68f5617fc907b7bde8d94e05.png" sizes="96x96" />
<link rel="icon" type="image/png" href="https://leanpub.com/assets/favicons/favicon-128x128-bf73acc329429fbf555afe3b067aa2d6.png" sizes="128x128" />
<link rel="icon" type="image/png" href="https://leanpub.com/assets/favicons/favicon-196x196-24a71f1b4fb02600f635b59a116daf05.png" sizes="196x196" />
<meta content='Leanpub' name='application-name'>
<meta content='#ffffff' name='msapplication-TileColor'>
<meta content='favicons/mstile-144x144.png' name='msapplication-TileImage'>
<meta content='favicons/mstile-150x150.png' name='msapplication-square150x150logo'>
<meta content='favicons/mstile-310x150.png' name='msapplication-wide310x150logo'>
<meta content='favicons/mstile-310x310.png' name='msapplication-square310x310logo'>
<meta content='favicons/mstile-70x70.png' name='msapplication-square70x70logo'>

<link href='//fonts.googleapis.com/' rel='dns-prefetch'>
<script src='https://ajax.googleapis.com/ajax/libs/webfont/1.6.16/webfont.js'></script>
<script>
  if (typeof WebFont !== 'undefined') {
    WebFont.load({
      google: {
        families: [
          'Noto+Sans:ital,wght@0,400;0,700;1,400;1,700',
          'Noto+Serif:ital,wght@0,400;0,700;1,400;1,700',
          'Inter:wght@400;700',
        ]
      }
    });
  }
</script>

<link rel="stylesheet" media="screen" href="https://leanpub.com/assets/font_awesome-bbab983f4954a5c7dd952efdd403ebe8.css" />
<script>
  window.__BASE_URL__ = "https://leanpub.com/"
  window.__RAILS_ENV__ = "production"
  window.__IGNORE_ANALYTICS__ = false
</script>
<script>
  var _rollbarConfig = {
      accessToken: "3d279f41d3804636adbbba833c2c0d2d",
      captureUncaught: true,
      captureUnhandledRejections: true,
      code_version: "b8baa115",
      payload: {
        environment: "production"
      }
  };
  // Rollbar Snippet
  !function(r){function o(n){if(e[n])return e[n].exports;var t=e[n]={exports:{},id:n,loaded:!1};return r[n].call(t.exports,t,t.exports,o),t.loaded=!0,t.exports}var e={};return o.m=r,o.c=e,o.p="",o(0)}([function(r,o,e){"use strict";var n=e(1),t=e(4);_rollbarConfig=_rollbarConfig||{},_rollbarConfig.rollbarJsUrl=_rollbarConfig.rollbarJsUrl||"https://cdnjs.cloudflare.com/ajax/libs/rollbar.js/2.5.2/rollbar.min.js",_rollbarConfig.async=void 0===_rollbarConfig.async||_rollbarConfig.async;var a=n.setupShim(window,_rollbarConfig),l=t(_rollbarConfig);window.rollbar=n.Rollbar,a.loadFull(window,document,!_rollbarConfig.async,_rollbarConfig,l)},function(r,o,e){"use strict";function n(r){return function(){try{return r.apply(this,arguments)}catch(r){try{console.error("[Rollbar]: Internal error",r)}catch(r){}}}}function t(r,o){this.options=r,this._rollbarOldOnError=null;var e=s++;this.shimId=function(){return e},"undefined"!=typeof window&&window._rollbarShims&&(window._rollbarShims[e]={handler:o,messages:[]})}function a(r,o){if(r){var e=o.globalAlias||"Rollbar";if("object"==typeof r[e])return r[e];r._rollbarShims={},r._rollbarWrappedError=null;var t=new p(o);return n(function(){o.captureUncaught&&(t._rollbarOldOnError=r.onerror,i.captureUncaughtExceptions(r,t,!0),i.wrapGlobals(r,t,!0)),o.captureUnhandledRejections&&i.captureUnhandledRejections(r,t,!0);var n=o.autoInstrument;return o.enabled!==!1&&(void 0===n||n===!0||"object"==typeof n&&n.network)&&r.addEventListener&&(r.addEventListener("load",t.captureLoad.bind(t)),r.addEventListener("DOMContentLoaded",t.captureDomContentLoaded.bind(t))),r[e]=t,t})()}}function l(r){return n(function(){var o=this,e=Array.prototype.slice.call(arguments,0),n={shim:o,method:r,args:e,ts:new Date};window._rollbarShims[this.shimId()].messages.push(n)})}var i=e(2),s=0,d=e(3),c=function(r,o){return new t(r,o)},p=function(r){return new d(c,r)};t.prototype.loadFull=function(r,o,e,t,a){var l=function(){var o;if(void 0===r._rollbarDidLoad){o=new Error("rollbar.js did not load");for(var e,n,t,l,i=0;e=r._rollbarShims[i++];)for(e=e.messages||[];n=e.shift();)for(t=n.args||[],i=0;i<t.length;++i)if(l=t[i],"function"==typeof l){l(o);break}}"function"==typeof a&&a(o)},i=!1,s=o.createElement("script"),d=o.getElementsByTagName("script")[0],c=d.parentNode;s.crossOrigin="",s.src=t.rollbarJsUrl,e||(s.async=!0),s.onload=s.onreadystatechange=n(function(){if(!(i||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)){s.onload=s.onreadystatechange=null;try{c.removeChild(s)}catch(r){}i=!0,l()}}),c.insertBefore(s,d)},t.prototype.wrap=function(r,o,e){try{var n;if(n="function"==typeof o?o:function(){return o||{}},"function"!=typeof r)return r;if(r._isWrap)return r;if(!r._rollbar_wrapped&&(r._rollbar_wrapped=function(){e&&"function"==typeof e&&e.apply(this,arguments);try{return r.apply(this,arguments)}catch(e){var o=e;throw o&&("string"==typeof o&&(o=new String(o)),o._rollbarContext=n()||{},o._rollbarContext._wrappedSource=r.toString(),window._rollbarWrappedError=o),o}},r._rollbar_wrapped._isWrap=!0,r.hasOwnProperty))for(var t in r)r.hasOwnProperty(t)&&(r._rollbar_wrapped[t]=r[t]);return r._rollbar_wrapped}catch(o){return r}};for(var u="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,captureEvent,captureDomContentLoaded,captureLoad".split(","),f=0;f<u.length;++f)t.prototype[u[f]]=l(u[f]);r.exports={setupShim:a,Rollbar:p}},function(r,o){"use strict";function e(r,o,e){if(r){var t;if("function"==typeof o._rollbarOldOnError)t=o._rollbarOldOnError;else if(r.onerror){for(t=r.onerror;t._rollbarOldOnError;)t=t._rollbarOldOnError;o._rollbarOldOnError=t}var a=function(){var e=Array.prototype.slice.call(arguments,0);n(r,o,t,e)};e&&(a._rollbarOldOnError=t),r.onerror=a}}function n(r,o,e,n){r._rollbarWrappedError&&(n[4]||(n[4]=r._rollbarWrappedError),n[5]||(n[5]=r._rollbarWrappedError._rollbarContext),r._rollbarWrappedError=null),o.handleUncaughtException.apply(o,n),e&&e.apply(r,n)}function t(r,o,e){if(r){"function"==typeof r._rollbarURH&&r._rollbarURH.belongsToShim&&r.removeEventListener("unhandledrejection",r._rollbarURH);var n=function(r){var e,n,t;try{e=r.reason}catch(r){e=void 0}try{n=r.promise}catch(r){n="[unhandledrejection] error getting `promise` from event"}try{t=r.detail,!e&&t&&(e=t.reason,n=t.promise)}catch(r){}e||(e="[unhandledrejection] error getting `reason` from event"),o&&o.handleUnhandledRejection&&o.handleUnhandledRejection(e,n)};n.belongsToShim=e,r._rollbarURH=n,r.addEventListener("unhandledrejection",n)}}function a(r,o,e){if(r){var n,t,a="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(n=0;n<a.length;++n)t=a[n],r[t]&&r[t].prototype&&l(o,r[t].prototype,e)}}function l(r,o,e){if(o.hasOwnProperty&&o.hasOwnProperty("addEventListener")){for(var n=o.addEventListener;n._rollbarOldAdd&&n.belongsToShim;)n=n._rollbarOldAdd;var t=function(o,e,t){n.call(this,o,r.wrap(e),t)};t._rollbarOldAdd=n,t.belongsToShim=e,o.addEventListener=t;for(var a=o.removeEventListener;a._rollbarOldRemove&&a.belongsToShim;)a=a._rollbarOldRemove;var l=function(r,o,e){a.call(this,r,o&&o._rollbar_wrapped||o,e)};l._rollbarOldRemove=a,l.belongsToShim=e,o.removeEventListener=l}}r.exports={captureUncaughtExceptions:e,captureUnhandledRejections:t,wrapGlobals:a}},function(r,o){"use strict";function e(r,o){this.impl=r(o,this),this.options=o,n(e.prototype)}function n(r){for(var o=function(r){return function(){var o=Array.prototype.slice.call(arguments,0);if(this.impl[r])return this.impl[r].apply(this.impl,o)}},e="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,_createItem,wrap,loadFull,shimId,captureEvent,captureDomContentLoaded,captureLoad".split(","),n=0;n<e.length;n++)r[e[n]]=o(e[n])}e.prototype._swapAndProcessMessages=function(r,o){this.impl=r(this.options);for(var e,n,t;e=o.shift();)n=e.method,t=e.args,this[n]&&"function"==typeof this[n]&&("captureDomContentLoaded"===n||"captureLoad"===n?this[n].apply(this,[t[0],e.ts]):this[n].apply(this,t));return this},r.exports=e},function(r,o){"use strict";r.exports=function(r){return function(o){if(!o&&!window._rollbarInitialized){r=r||{};for(var e,n,t=r.globalAlias||"Rollbar",a=window.rollbar,l=function(r){return new a(r)},i=0;e=window._rollbarShims[i++];)n||(n=e.handler),e.handler._swapAndProcessMessages(l,e.messages);window[t]=n,window._rollbarInitialized=!0}}}}]);
  // End Rollbar Snippet
</script>

<script src="https://www.google.com/recaptcha/api.js?render=6LdDCakUAAAAAEFI0Kyx_gg9t-G4r1mOWrIwFLd0"></script>
<script src="https://leanpub.com/assets/modernizr-a38b94cc0625ba4488942166ee4d23a4.js"></script>
<title data-react-helmet="true">Mob Programming  by Woody Zuill et al. [Leanpub PDF/iPad/Kindle]</title><meta data-react-helmet="true" name="og:site_name" content="Leanpub"/><meta data-react-helmet="true" name="title" content="Mob Programming"/><meta data-react-helmet="true" name="description" content="&amp;quot;All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer&amp;quot; - We call it &amp;quot;Mob Programming&amp;quot;. With dual projectors, one computer, two keyboards, and a very collaborative approach we use this practice to super-charge our development efforts and deliver high value software quickly."/><meta data-react-helmet="true" name="author" content="Woody Zuill"/><meta data-react-helmet="true" name="author" content="Kevin Meadows"/><meta data-react-helmet="true" name="DCTERMS.title" content="Mob Programming"/><meta data-react-helmet="true" name="DCTERMS.description" content="&amp;quot;All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer&amp;quot; - We call it &amp;quot;Mob Programming&amp;quot;. With dual projectors, one computer, two keyboards, and a very collaborative approach we use this practice to super-charge our development efforts and deliver high value software quickly."/><meta data-react-helmet="true" name="DCTERMS.type" content="book"/><meta data-react-helmet="true" name="DCTERMS.creator" content="Woody Zuill"/><meta data-react-helmet="true" name="DCTERMS.creator" content="Kevin Meadows"/><meta data-react-helmet="true" name="DCTERMS.publisher" content="Leanpub"/><meta data-react-helmet="true" name="DCTERMS.contributor" content="Aaron"/><meta data-react-helmet="true" name="DCTERMS.contributor" content="Mike"/><meta data-react-helmet="true" name="DCTERMS.contributor" content="Nancy Van Schooenderwoert"/><meta data-react-helmet="true" name="DCTERMS.date" content="2013-03-22T16:14:26.000Z"/><meta data-react-helmet="true" name="DCTERMS.language" content="eng"/><meta data-react-helmet="true" property="og:title" content="Mob Programming"/><meta data-react-helmet="true" property="og:type" content="book"/><meta data-react-helmet="true" property="og:image" content="https://d2sofvawe08yqg.cloudfront.net/mobprogramming/s_featured?1620374294"/><meta data-react-helmet="true" property="og:url" content="http://leanpub.next/mobprogramming"/><meta data-react-helmet="true" property="og:publisher" content="Leanpub"/><meta data-react-helmet="true" property="og:description" content="&amp;quot;All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer&amp;quot; - We call it &amp;quot;Mob Programming&amp;quot;. With dual projectors, one computer, two keyboards, and a very collaborative approach we use this practice to super-charge our development efforts and deliver high value software quickly."/><meta data-react-helmet="true" name="twitter:card" content="summary"/><meta data-react-helmet="true" name="twitter:site" content="@Leanpub"/><meta data-react-helmet="true" name="twitter:title" content="Mob Programming"/><meta data-react-helmet="true" name="twitter:description" content="&amp;quot;All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer&amp;quot; - We call it &amp;quot;Mob Programming&amp;quot;. With dual projectors, one computer, two keyboards, and a very collaborative approach we use this practice to super-charge our development efforts and deliver high value software quickly."/><meta data-react-helmet="true" name="twitter:image" content="https://d2sofvawe08yqg.cloudfront.net/mobprogramming/s_featured?1620374294"/><meta data-react-helmet="true" name="twitter:url" content="http://leanpub.next/mobprogramming"/>
</head>
<body>
<div id='react-root'><div class="app"><section class="Header"><nav class="Header__Nav"><a class="Header__Nav__Logo" href="/"><img src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAGAAAABDCAYAAABjoACgAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAABSRJREFUeNrsXP11mzAQx375P+oEYQOzQdig3iDOBHUnKBs4mYB0grgTQCYwmcBkAuMJXCk9xYqK0DfgoHvvHnl20En3ofsd5hRFgQIFChQoUKBBaOZz8NPphPAlwZxivsEcY6aftVGDuYLrK/xdzWaz2lB+DLIILxjZSHALlU3kvWEuQX5zMQbAi17iyy0oPXE0bAXKeJQZA5T+w5P8Fyx/O7owwotOMeeYDyf/VBB5gjkUPcg/wFrToZWOMK8w70/DEFF2AlwMNIc96AD1tgWBsDWEOYoC0dz1iPlBN1+YGCDHl5WDSdfAlJDDPVtlT2cVFQPb0hM2wL3ODVcGQnQnWsKCCaqp8QRLDeREk7kNvSdPVUQDe3sMqCnRlB97dx08wZ3CvrgBNOQq16w1c80e7kGO5rCENcnmsOsjB5wEXxF49rsNpjFenUA9kLRsO+yW9AJ/lyzsJAkPXzYduYd49098zxMHS1PGo6mn3suisQNm32FudTA85syn9yMRIhHAwo1CxMhoxyINmEPe8n859z9riezUUhci5IV8GiCVGQCUfvCEvzM2GuCzA0QGVXymKN+XAVKfBlgKhGbwfdID9iZenTDyEsY5dPKErQEywbhauW+uKVcGE/uoC8gc3rclvN0SVFOBAxSaKCT1OD9vMPS6A+ppC7ekHPDAraO6xATe/tLQkRMDjCECPhlhhFWxlhPOXUhk4NxiKs8eTCCsCwOkI4sAG7r1NG7adwSUpuH3BajsLQIUYVt4OqquK2cRUFFMPkFdV33mAJFVjxfq/S7qgKPt2HOHXhAiwHMEiFBDM+H9v7FFWC4jYBEiwG8EJIKC5GIjwPaBXMeva4kPAyCJB0wxB4iiADk1QAfEbEIN0J4HVGH53ML7CdUTrgE+6cA0ClQNIFLw24V7v4ta4M0mDziJgAnv/71FwEIiHAUDKOvMSwQsggEGyAHMOzuXGgHWvwl0vC7vPQewguNo2lR7iwB4sywKBtDfhjp0pxUBcVcBoiJkqsWYimPaGOD1C3h/6mic1yEM0ITtp58IuBF8XgUD/KcLVd05jYCboP8BcgB5J/MrRICLt5kZXfRmgCZAUKUosDNAR7NBFQyglgdkDRuyl3MThzVADUwmeozOxxLw8siEr6NzSxNy4JkVI7fmCqfKYwTQNZWmBkAWNQARqtydyNzDexDtVLyL1B97b0H21vScCcNaYKn7SMI0AkTbD1n4H1h406JI1FL8LMAjj5zHkpbWGhIc4QeIuFXU3iROxvgdtTRLw30xF1E0yl5anKDpSKy6lIBejBDCpqu9B9p0aEtozO57TGvnzvIogJw/DoDrBfvoEeO+X8G9e8t2qA2sBcnQlGCMjQ1EKyQG4JW+9nxuw6dDMkAm4pSQez6forX/WKWB0cQArd7L/Q/xjucBDupIucX3fWDHM9+QZ9K8PZMYQNSU/S36d2DH3cAw9AGu6wHn8JF7MB8EhdrMpQGaKPQBdEFRpGOAK4MS3VT5ZXQ+CozH4uzY9HixxGF00fqDHoMmqlrj6Hy0mskjCiTSpain7MqjN5QASUtNSLfloCs9lyE2UDo9v8IIUjI1yPfIX1+xUHhmmBytTpDqmI/q6Vx7HpY6kk+hrUmyz3wbIO/rp0nJvLKe5hBrwl0jAxQKnpZ5PR2kY2vgomE/xPupTEEoi8zChQH2gH3XY3gZFxa/A0YjmE8CunluMUihDUOZZzcun4s4NwLAvGak8xu9DgMFChQo0HD0V4ABAKiCSwHftnDCAAAAAElFTkSuQmCC" alt="Leanpub"/></a><div class="Header__Middle"></div><button class="btn--plain DropdownContainer__Trigger "><div class="Header__Nav__Logo relative__nav__logo"><i class="HeaderIcon fa fa-bars"></i><i class="AccountItem__Trigger fa fa-caret-down"></i></div></button></nav></section><div id="scroll-wrapper" class="scroll-wrapper  undefined false"><div class="main"><article class="book-show" lang="en"><div class="quick-buy-header"><div class="container--large"><div class="quick-buy-item-details"><div class="book-cover s_hero "><img src="https://d2sofvawe08yqg.cloudfront.net/mobprogramming/s_hero?1620374294" style="width:auto;height:auto"/></div><h6 class="quick-buy-title">Mob Programming</h6></div></div></div><div class="text-banner flash flash--warning"><div class="container--large"><h1 class="text-banner-title"><span>Retired</span></h1><div class="text-banner-content"><p><span>This book is no longer available for sale.</span></p></div></div></div><section class="book-hero"><div class="container--medium--title"><h3 class="book-hero__title ltr">Mob Programming</h3><h6 class="book-hero__subtitle">A Whole Team Approach</h6></div><div class="shelf-hero container--medium"><aside class="book-hero__summary ltr"><div class="book-hero__cover"><div class="book-cover s_hero "><img src="https://d2sofvawe08yqg.cloudfront.net/mobprogramming/s_hero?1620374294" style="width:auto;height:auto"/></div><div class="book-progress"><div class="progress-bar" title="[object Object]"><span class="progress-bar__meter" style="width:100%"></span></div><p class="percent-complete"><span>This book is 100% complete</span></p><p class="last-updated"><span>Last updated on 2021-03-24</span></p></div></div><div class="book-hero__author"><div><div class="avatars"><div class="avatar--tiny"><a href="https://leanpub.com/u/woody_zuill"><img class="avatar__image" src="https://d39qdlcrvnra4b.cloudfront.net/avatars/117786/tiny/XP2015.png?1458583066" alt="Woody Zuill"/></a></div><div class="avatar--tiny"><a href="https://leanpub.com/u/kmeadows"><img class="avatar__image" src="https://secure.gravatar.com/avatar/49d77cc4751e2d2bf29133ac7cd87914?r=pg&amp;d=mm" alt="kevin"/></a></div></div><div class="names"><a class="link" href="https://leanpub.com/u/woody_zuill">Woody Zuill</a><span> and </span><a class="link" href="https://leanpub.com/u/kmeadows">Kevin Meadows</a></div></div></div><div class="book-hero__blurb"><p>"All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer" - We call it "Mob Programming". With dual projectors, one computer, two keyboards, and a very collaborative approach we use this practice to super-charge our development efforts and deliver high value software quickly.</p></div></aside><aside class="book-hero__purchase"><div class="book-hero__actions"><div><a class="btn--hollow"><span>Table of Contents</span><i class="fa fa-list-ol"></i></a></div></div></aside></div><div class="book-hero__meta-container"><div class="book-hero__metadata"><ul class="stats__list"><li class="stats__list-item"><span class="stats__list-item-metric">1,080</span><p class="stats__list-item__title"><span>Readers</span></p></li><li class="stats__list-item"><span class="stats__list-item-metric">235</span><p class="stats__list-item__title"><span>Pages</span></p></li><li class="stats__list-item"><a href="#happiness-guarantee"><span class="stats__list-item-metric"><span>60 days</span></span><p class="stats__list-item__title"><span>guarantee</span></p></a></li><li class="stats__list-item"><i class="fa fa-globe stats__list-item-icon"></i><p class="stats__list-item__title">English</p></li><li class="stats__list-item" title="For Mac and PC"><i class="fa fa-laptop stats__list-item-icon"></i><p class="stats__list-item__title">PDF</p></li><li class="stats__list-item" title="For phones and tablets"><i class="fa fa-mobile stats__list-item-icon"></i><i class="fa fa-tablet stats__list-item-icon"></i><p class="stats__list-item__title">EPUB</p></li><li class="stats__list-item" title="On the web"><span class="stats__list-item--leanpub-icon"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 347.827 237.519" style="enable-background:new 0 0 347.827 237.519;"
	 xml:space="preserve">
<path class="st0" d="M321.584,21.423C309.91,14.855,279.145,0,239.679,0c-35.436,0-55.606,10.893-65.766,17.889
	C163.754,10.893,143.584,0,108.148,0C68.682,0,37.917,14.855,26.242,21.423L0,237.519h0.783c14.836,0,29.441-3.421,42.86-9.752
	c14.957-7.057,38.538-15.36,66.698-15.36c34.255,0,53.752,15.291,63.573,25.112c9.821-9.821,29.318-25.112,63.573-25.112
	c28.16,0,51.741,8.303,66.698,15.36c13.418,6.331,28.023,9.752,42.86,9.752h0.783L321.584,21.423z M303.403,202.544
	c-13.892-5.715-27.909-9.622-41.664-11.615c-8.081-1.17-16.241-1.764-24.253-1.764c-22.779,0-43.361,5.68-61.175,16.883
	l-2.398,1.491l-2.385-1.484c-17.826-11.21-38.409-16.89-61.188-16.89c-8.012,0-16.171,0.594-24.251,1.764
	c-13.755,1.992-27.774,5.9-41.666,11.615l-17.659,7.265L47.831,36.451l1.56-0.689c17.758-7.848,40.543-12.533,60.95-12.533
	c25.278,0,46.649,8.049,63.573,23.936c16.924-15.886,38.294-23.936,63.572-23.936c20.407,0,43.192,4.686,60.95,12.533l1.56,0.689
	l21.065,173.358L303.403,202.544z M241.984,181.205c-2.178-0.086-4.35-0.132-6.512-0.132c-22.871,0-43.604,5.647-61.626,16.777
	c-18.031-11.133-38.759-16.777-61.626-16.777c-8.044,0-16.234,0.595-24.343,1.77c-13.807,1.999-27.86,5.915-41.768,11.636
	l-7.933,3.263L56.999,42.849c16.281-6.903,36.783-11,55.222-11c23.941,0,43.983,7.904,59.569,23.491l2.057,2.057l2.056-2.057
	c15.017-15.017,34.18-22.88,56.968-23.437L241.984,181.205z"/>
</svg>
</span><p class="stats__list-item__title">WEB</p></li></ul></div></div></section><span style="font-size:0"></span><section class="about-book"><div class="container--medium"><h1 class="section__title"><span>About the Book</span></h1><div class="about-book__content" dir="ltr" data-dir="ltr"><div class="about-book__copy"><p><strong><em>To our valued readers: We thank for your purchases and support over the years. We have retired this version of the book because we have a second edition available with a new publisher. Those who have purchased the first edition will still be able to download it from LeanPub.  </em></strong></p><p> </p><p><strong><em>The second edition includes new material on teams, the power of flow, remote Mob Programming, and more. It is available at </em></strong></p><p> </p><p><a href="https://a.co/d/dmFuQal" target="_blank">https://a.co/d/dmFuQal</a></p><p> </p><p> </p><p>"All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer" - We call it "Mob Programming". With dual projectors, one computer, two keyboards, and a very collaborative approach we use this approach to super-charge our development efforts and deliver high value software quickly.</p><p>In this book we share our "Mob Programming" style. We'll cover the techniques we use in our daily work , how we discovered this way of working, the benefits we see from "Mobbing", the problems we've overcome, and how you can incorporate some of our ideas even though you don't have a way to adopt Mob Programming full time.</p></div><div class="about-book__meta"><ul class="meta-list"><li class="meta-list__item"><h3 class="meta-list__item-title"><span>Share this book</span></h3><ul class="social-sharing"><li class="twitter"><span class="icon-link--twitter" aria-label="twitter" tabindex="0"></span></li><li class="facebook"><span class="icon-link--facebook" aria-label="facebook" tabindex="0"></span></li></ul></li><li class="meta-list__item"><h3 class="meta-list__item-title"><span>Categories</span></h3><ul class="meta-list__item categories"><li>Software</li><li>Agile</li><li>Teamwork</li></ul></li><li class="meta-list__item"><h3 class="meta-list__item-title"><span>Feedback</span></h3><a class="btn--hollow --interactive" href="/mobprogramming/email_author/new"><span>Email the Author(s)</span></a></li></ul></div></div></div></section><section class="about-authors"><section class="lane--author"><div class="container--medium"><header class="lane__header--center"><h4><span>About the Authors</span></h4></header><div data-item-count="2" class="lane__contents--author lane__contents--center"><div><div class="lane-item--author"><a class="avatar-with-name--vertical link" href="/u/woody_zuill"><div class="avatar--small"><img class="avatar__image" src="https://d39qdlcrvnra4b.cloudfront.net/avatars/117786/small/XP2015.png?1458583066" alt="Woody Zuill"/></div><span class="avatar-with-name__name">Woody Zuill</span></a><div class="profile-icons"><a class="icon-link--twitter" href="https://twitter.com/woodyzuill"></a></div><div class="lane-item__author_blurb text-left"><p>I'm Woody Zuill. I’ve been programming computers for over 30 years, and I'm currently the Agile Coach for a development team - the "Mob". For the past 15+ years I've worked continuously as an Agile Coach and/or developer in both large and small environments, and have trained over 20 teams and 200+ developers in Agile practices. I believe code must be simple, clean, testable, and maintainable so we can respond to change while quickly delivering working software. I have a passion for bringing unmaintainable code back into a manageable, healthy state.</p></div></div></div><div><div class="lane-item--author"><a class="avatar-with-name--vertical link" href="/u/kmeadows"><div class="avatar--small"><img class="avatar__image" src="https://secure.gravatar.com/avatar/49d77cc4751e2d2bf29133ac7cd87914?r=pg&amp;d=mm" alt="kevin"/></div><span class="avatar-with-name__name">Kevin Meadows</span></a><span></span><div class="lane-item__author_blurb text-left"><p>I have been working with software since the days of dual floppy drives (remember those?). I have worked in environments ranging from scientific research to small startups to large enterprise outfits. Along the way I always found the process of software development to be especially interesting. After watching so many Waterfall projects crash and burn and thinking "there has to be a better way" I could not help but wonder "what took so long?" when Agile methods finally appeared. When Woody showed me Mobbing I realized it was the next logical step.</p></div></div></div></div></div></section></section><section class="about-contributors"><section class="lane--contributor"><div class="container--medium"><header class="lane__header--center"><h4><span>About the Contributors</span></h4></header><div data-item-count="3" class="lane__contents--contributor lane__contents--center"><div><div class="lane-item--contributor"><div class="avatar-with-name--vertical"><div class="avatar--small"><img class="avatar__image" src="data:image/jpeg;base64,/9j/4AAQSkZJRgABAQEASABIAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwKDAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8IAEQgAUABQAwERAAIRAQMRAf/EABoAAQACAwEAAAAAAAAAAAAAAAAFBwEGCAP/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIQAxAAAAEAAAAAACRBHAAAFslnGSsyowACZOjzIBziQgAJ86KABzwa6AAXkbsDTyhwACVLnNtMGqFLkUAe50STIBghznY8AWSXAAYMmCoStQXobqAYANLKLP/EACAQAAICAgIDAQEAAAAAAAAAAAMFBAYCIAEQABIwFDH/2gAIAQEAAQUC+wF0qVxIXSovwr1Zxxw/nVgrOJMdU8b9bTR1F4htdEB+I7jSwmxO51rz7FiHp+9GtBquWHaGW1uIv7Z1yKy8YrDqzdgDnJKqXYK4mjVdg0iHBnGN1TIPvI2ucH0P1UQ8CTbW4PBU3n//xAAUEQEAAAAAAAAAAAAAAAAAAABg/9oACAEDAQE/AUn/xAAUEQEAAAAAAAAAAAAAAAAAAABg/9oACAECAQE/AUn/xAAvEAACAAMEBwcFAAAAAAAAAAABAgMEERIgITEAEBNCkbHBIjAyU2Fx8EFDUVJy/9oACAEBAAY/Au+BhS8R1O8Fw46ExZeIijeK4ce4EzOJaY+GEwy9TraZlFsOBVoQGDe16WhGhBepB/AxuzMJfCGqKfQHG7Ku2VqzxwuzTKai1TgKXhCjMomhh/frraGjWplhQAbvqb2zgjLNjkNA1nbxv3foNZemxjeYnUabOMM8mGRuLChqXdsABosFMTmzUzN1oL4HNWpkdHhRFsupoRriTTDsoLC+/wA534U0owfst7/OWtW8xix5dL7MftsGHLrq/8QAJhABAAECBQMEAwAAAAAAAAAAAREhYQAQIDFBUZHRMHGBsaHB8P/aAAgBAQABPyH1mFbAvnFmB2thX4vQA2Hfg9Hrbj32CEFDCTTBVu5KBw25+9JEAgsjUHYdMSBBRBQD4mNMkHRWP7aaRYTuC/Jq2japhEbL7yHScwVqLjWfwc6kI2E0p3cHvArHMNLBU97579X5HsP3TfAEZCa07OhbZ9WcLdFwTzPjSt03JPE+cNinhnHY1STXu2g1o9A6cbNm8mYRqs+4rrFGRj3Ncj//2gAMAwEAAgADAAAAEAAAAAAABAAAAIIAABJIAAIIBAABAAAAIBJAABJAIBJIIABIIIIP/8QAFBEBAAAAAAAAAAAAAAAAAAAAYP/aAAgBAwEBPxBJ/8QAFBEBAAAAAAAAAAAAAAAAAAAAYP/aAAgBAgEBPxBJ/8QAIhABAQEAAQUAAwADAAAAAAAAAREhMQAQIEGBMFFhkaGx/9oACAEBAAE/EPzWm7xT7IgHlWEbx1N2pkNhIqqAjt/BaF8xU5HK9Phr0gAAYBwdAVFEiPSqZRwBwv08CYkb5N1poDKPdFP70EIYeATNCpAKHAD8euPEHE7SKJLqYJX+Dzx187fOvnQEDhCYJv6U+Z5NPNvB0BJg0OWBh2WMZAWFhCURH+FTxbPVt9EkMqQAV3IKCrjQgdX1NB016fevvVEY8GZM/otXFBjps9W32SwWLEQTMiL3Gk0LU/0HtXAFcOgeWLCbpPXBVQArL4g8kGA3C+uSIopS3pSkj9E/6PI8Iic91bIQFik2rHjR7ieewoYDnW9qpZgN07mKrERGJnELt1e3zv8AO1hFYInFziNyaHb/2Q==" alt="Aaron"/></div><span class="avatar-with-name__name">Aaron</span></div><p class="lane-item--contributor__title">Griffith</p><span></span><div class="truncate__text lane-item__blurb"><div class="truncate__text"><div><div></div></div></div></div></div></div><div><div class="lane-item--contributor"><div class="avatar-with-name--vertical"><div class="avatar--small"><img class="avatar__image" src="https://s3.amazonaws.com/avatars.leanpub.com/avatars/1430/small/Mike2015.jpg?1459552729" alt="Mike"/></div><span class="avatar-with-name__name">Mike</span></div><p class="lane-item--contributor__title">Bowler</p><div class="profile-icons"><a class="icon-link--twitter" href="https://twitter.com/mike_bowler"></a></div><div class="truncate__text lane-item__blurb"><div class="truncate__text"><div><div></div></div></div></div></div></div><div><div class="lane-item--contributor"><div class="avatar-with-name--vertical"><div class="avatar--small"><img class="avatar__image" src="data:image/jpeg;base64,/9j/4AAQSkZJRgABAQEASABIAAD//gA7Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2NjIpLCBxdWFsaXR5ID0gOTAK/9sAQwADAgIDAgIDAwMDBAMDBAUIBQUEBAUKBwcGCAwKDAwLCgsLDQ4SEA0OEQ4LCxAWEBETFBUVFQwPFxgWFBgSFBUU/9sAQwEDBAQFBAUJBQUJFA0LDRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU/8IAEQgAUABQAwERAAIRAQMRAf/EABoAAQACAwEAAAAAAAAAAAAAAAAFBwEGCAP/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIQAxAAAAEAAAAAACRBHAAAFslnGSsyowACZOjzIBziQgAJ86KABzwa6AAXkbsDTyhwACVLnNtMGqFLkUAe50STIBghznY8AWSXAAYMmCoStQXobqAYANLKLP/EACAQAAICAgIDAQEAAAAAAAAAAAMFBAYCIAEQABIwFDH/2gAIAQEAAQUC+wF0qVxIXSovwr1Zxxw/nVgrOJMdU8b9bTR1F4htdEB+I7jSwmxO51rz7FiHp+9GtBquWHaGW1uIv7Z1yKy8YrDqzdgDnJKqXYK4mjVdg0iHBnGN1TIPvI2ucH0P1UQ8CTbW4PBU3n//xAAUEQEAAAAAAAAAAAAAAAAAAABg/9oACAEDAQE/AUn/xAAUEQEAAAAAAAAAAAAAAAAAAABg/9oACAECAQE/AUn/xAAvEAACAAMEBwcFAAAAAAAAAAABAgMEERIgITEAEBNCkbHBIjAyU2Fx8EFDUVJy/9oACAEBAAY/Au+BhS8R1O8Fw46ExZeIijeK4ce4EzOJaY+GEwy9TraZlFsOBVoQGDe16WhGhBepB/AxuzMJfCGqKfQHG7Ku2VqzxwuzTKai1TgKXhCjMomhh/frraGjWplhQAbvqb2zgjLNjkNA1nbxv3foNZemxjeYnUabOMM8mGRuLChqXdsABosFMTmzUzN1oL4HNWpkdHhRFsupoRriTTDsoLC+/wA534U0owfst7/OWtW8xix5dL7MftsGHLrq/8QAJhABAAECBQMEAwAAAAAAAAAAAREhYQAQIDFBUZHRMHGBsaHB8P/aAAgBAQABPyH1mFbAvnFmB2thX4vQA2Hfg9Hrbj32CEFDCTTBVu5KBw25+9JEAgsjUHYdMSBBRBQD4mNMkHRWP7aaRYTuC/Jq2japhEbL7yHScwVqLjWfwc6kI2E0p3cHvArHMNLBU97579X5HsP3TfAEZCa07OhbZ9WcLdFwTzPjSt03JPE+cNinhnHY1STXu2g1o9A6cbNm8mYRqs+4rrFGRj3Ncj//2gAMAwEAAgADAAAAEAAAAAAABAAAAIIAABJIAAIIBAABAAAAIBJAABJAIBJIIABIIIIP/8QAFBEBAAAAAAAAAAAAAAAAAAAAYP/aAAgBAwEBPxBJ/8QAFBEBAAAAAAAAAAAAAAAAAAAAYP/aAAgBAgEBPxBJ/8QAIhABAQEAAQUAAwADAAAAAAAAAREhMQAQIEGBMFFhkaGx/9oACAEBAAE/EPzWm7xT7IgHlWEbx1N2pkNhIqqAjt/BaF8xU5HK9Phr0gAAYBwdAVFEiPSqZRwBwv08CYkb5N1poDKPdFP70EIYeATNCpAKHAD8euPEHE7SKJLqYJX+Dzx187fOvnQEDhCYJv6U+Z5NPNvB0BJg0OWBh2WMZAWFhCURH+FTxbPVt9EkMqQAV3IKCrjQgdX1NB016fevvVEY8GZM/otXFBjps9W32SwWLEQTMiL3Gk0LU/0HtXAFcOgeWLCbpPXBVQArL4g8kGA3C+uSIopS3pSkj9E/6PI8Iic91bIQFik2rHjR7ieewoYDnW9qpZgN07mKrERGJnELt1e3zv8AO1hFYInFziNyaHb/2Q==" alt="Nancy Van Schooenderwoert"/></div><span class="avatar-with-name__name">Nancy Van Schooenderwoert</span></div><span></span><div class="truncate__text lane-item__blurb"><div class="truncate__text"><div><div></div></div></div></div></div></div></div></div></section></section><span></span><section class="layer"><div class="container--large"><div class="container--small section-toc" id="toc"><header class="lane__header--center"><h4><span>Table of Contents</span></h4></header><div class="truncate__text"><div class="truncate__text"><div><div><ul class='toc no-parts'>
  <li>
    Acknowledgements
  </li>
  <li>
    Part One: Introduction
  </li>
  <li>
    1.1 What is Mob Programming?
    <ul>
      <li>
        How We Started
      </li>
      <li>
        What’s in a Name?
      </li>
      <li>
        Why this Book?
      </li>
    </ul>
  </li>
  <li>
    1.2 Set the Stage for Great Things
    <ul>
      <li>
        It’s About the Environment
      </li>
      <li>
        We Work Better when We Work Together.
      </li>
      <li>
        The Stage was Set
      </li>
    </ul>
  </li>
  <li>
    1.3 A View of the Room
    <ul>
      <li>
        A little peek at what it looks like
      </li>
    </ul>
  </li>
  <li>
    1.4 See for Yourself
    <ul>
      <li>
        Watch a video of a full day of work in only 3 minutes!
      </li>
    </ul>
  </li>
  <li>
    1.5 How We Discovered Mob Programming
    <ul>
      <li>
        The Driver-Navigator Model
      </li>
      <li>
        The Coding Dojo Sessions
      </li>
      <li>
        Studying and Practicing Together
      </li>
      <li>
        The Next (In)Obvious Steps
      </li>
    </ul>
  </li>
  <li>
    1.6 Quick Start Guide
  </li>
  <li>
    Part Two: The Details
  </li>
  <li>
    2.1 The Team
    <ul>
      <li>
        The Mob Programming Team
      </li>
    </ul>
  </li>
  <li>
    2.2 The Workspace Setup
    <ul>
      <li>
        Introduction
      </li>
      <li>
        The Area
      </li>
      <li>
        The Computer
      </li>
      <li>
        Projectors or Monitors
      </li>
      <li>
        Keyboard/Mouse
      </li>
      <li>
        Chairs and Tables
      </li>
      <li>
        Telephone and Email
      </li>
      <li>
        Ergonomics
      </li>
      <li>
        Private Work Area
      </li>
    </ul>
  </li>
  <li>
    2.3 The Driver-Navigator Model In-Depth
    <ul>
      <li>
        The Navigators and Navigation
      </li>
      <li>
        The Driver and Driving
      </li>
      <li>
        The Consultation - The Pause for Clarity
      </li>
      <li>
        Conflicting Ideas
      </li>
      <li>
        An Example
      </li>
      <li>
        Rotating the Roles
      </li>
      <li>
        A Timer
      </li>
      <li>
        Summary
      </li>
    </ul>
  </li>
  <li>
    2.4 Why Would We Work This Way?
    <ul>
      <li>
        There are Many Benefits from Working as a Mob Programming team
      </li>
      <li>
        It’s a Trick Question
      </li>
      <li>
        The Typical Answers
      </li>
      <li>
        The Real Answer: We Work this Way Because the Team Decided to Work this Way
      </li>
      <li>
        Provide a Safe Place Where We can Discover Awesomeness
      </li>
    </ul>
  </li>
  <li>
    2.5 How Can We Work This Way?
    <ul>
      <li>
        A Principle to Live By
      </li>
      <li>
        It’s the People, not the Code
      </li>
      <li>
        Our Story
      </li>
      <li>
        Kindness, Consideration, and Respect
      </li>
    </ul>
  </li>
  <li>
    Part Three: Productivity
  </li>
  <li>
    3.1 The Productivity Question
    <ul>
      <li>
        How Can Five People At One Computer Be Productive?
      </li>
      <li>
        Changing the question
      </li>
      <li>
        What we found with Mob Programming
      </li>
      <li>
        Another way to think about it
      </li>
    </ul>
  </li>
  <li>
    3.2 Problems That Faded Away
    <ul>
      <li>
        It’s The System?
      </li>
      <li>
        A Backpacking Trip
      </li>
      <li>
        Management Overhead
      </li>
      <li>
        Working Well Together
      </li>
      <li>
        What’s Coming Up in the Next Chapters
      </li>
    </ul>
  </li>
  <li>
    3.3 Problem: Faulty Communications
    <ul>
      <li>
        Communication problems are pervasive, numerous, and paralyzing.
      </li>
      <li>
        Problem: Getting Answers to Questions can take a lot of time.
      </li>
      <li>
        Problem: Communication by Email
      </li>
      <li>
        Problem: Communication by Documentation
      </li>
    </ul>
  </li>
  <li>
    3.4 Problem: Issues with Decision Making
    <ul>
      <li>
        Decisions are a Good Thing
      </li>
    </ul>
  </li>
  <li>
    3.5 Problem: Doing More Than What is Barely Sufficient
    <ul>
      <li>
        Should We Ever do More than Enough?
      </li>
      <li>
        Examples of “Too Much”
      </li>
      <li>
        How Mob Programming has Helped
      </li>
      <li>
        Conclusion
      </li>
    </ul>
  </li>
  <li>
    3.6 Problem: Technical Debt
    <ul>
      <li>
        The Alligator in the Pond
      </li>
      <li>
        It Faded Away
      </li>
      <li>
        The Many Forms of Technical Debt
      </li>
      <li>
        Conclusion
      </li>
    </ul>
  </li>
  <li>
    3.7 Problem: Thrashing
    <ul>
      <li>
        Distractions, Context Switching, Interruptions: This is Thrashing
      </li>
      <li>
        Thrashing of Programmers
      </li>
      <li>
        Who Gets Thrashed?
      </li>
      <li>
        Why is Thrashing Harmful?
      </li>
      <li>
        How it Faded Away for Us
      </li>
      <li>
        Recap
      </li>
    </ul>
  </li>
  <li>
    3.8 Problem: Politics
    <ul>
      <li>
        Many faces of politics
      </li>
      <li>
        It Faded Away
      </li>
    </ul>
  </li>
  <li>
    3.9 Problem: Meetings
    <ul>
      <li>
        “Please, sir, I want some more meetings.”
      </li>
    </ul>
  </li>
  <li>
    3.10 A Simple Cost Analysis of Mob Programming
    <ul>
      <li>
        Sensitivity Analysis
      </li>
      <li>
        Summary
      </li>
      <li>
        References
      </li>
    </ul>
  </li>
  <li>
    3.11 The Power of Flow
    <ul>
      <li>
        References
      </li>
    </ul>
  </li>
  <li>
    Part Four: A Few Other Things
  </li>
  <li>
    4.1 What is the Ideal Number of Team Members?
  </li>
  <li>
    4.2 Continuous Learning
    <ul>
      <li>
        Providing an Environment where Learning is “Amplified”
      </li>
      <li>
        Study and Practice Together
      </li>
      <li>
        Friday Afternoon Practice
      </li>
      <li>
        Mob Programming and Learning
      </li>
      <li>
        Our Morning Hour of Learning
      </li>
      <li>
        Amplifying Learning
      </li>
    </ul>
  </li>
  <li>
    4.3 Exposed
    <ul>
      <li>
        The Fear of Being Exposed
      </li>
      <li>
        Why It Might be Frightening
      </li>
      <li>
        What can we do about this?
      </li>
      <li>
        Mistakes are Part of the Process
      </li>
      <li>
        This is Voluntary
      </li>
      <li>
        Conclusion
      </li>
    </ul>
  </li>
  <li>
    4.4 Ergonomics, Health, and Sanity
    <ul>
      <li>
        Let’s Take Care of Ourselves
      </li>
      <li>
        Projectors, Chairs, Keyboards, and Screens
      </li>
      <li>
        Stretching, Talking Walks, Taking Breaks
      </li>
      <li>
        Preventing the Spread of Illness
      </li>
      <li>
        Sanity
      </li>
      <li>
        In Conclusion
      </li>
    </ul>
  </li>
  <li>
    4.5 Retrospectives: Reflect, Tune, and Adjust Frequently
    <ul>
      <li>
        If You Only have Time to get Good at One Thing, Start with Retrospectives
      </li>
      <li>
        An Example of a Typical Retrospective
      </li>
      <li>
        An Affinity Mapping Example
      </li>
      <li>
        Give it a Name
      </li>
      <li>
        Here is What We Decided to Try
      </li>
      <li>
        A Daily Practice Period
      </li>
      <li>
        Another Retrospective, Another Step Forward: The 12 Days of Index
      </li>
      <li>
        Things to Notice
      </li>
      <li>
        The Takeaway
      </li>
    </ul>
  </li>
  <li>
    4.6 Turn Up The Good
    <ul>
      <li>
        Something that Works Well: Turn Up the Good
      </li>
      <li>
        Solving Problems - What’s Wrong with That?
      </li>
      <li>
        Turn Up The Good
      </li>
    </ul>
  </li>
  <li>
    4.7 Relaxed and Sustainable
    <ul>
      <li>
        This is Wearing Us Out!
      </li>
      <li>
        The Problem
      </li>
      <li>
        We Don’t Need to Be a Hero
      </li>
      <li>
        Take a Break
      </li>
      <li>
        Make it Sustainable
      </li>
    </ul>
  </li>
  <li>
    4.8 Barriers to Mob Programming
    <ul>
      <li>
        My Manager Won’t Let Us
      </li>
      <li>
        We Don’t Have a Space to Do It
      </li>
      <li>
        We Don’t Know How to Get Started
      </li>
      <li>
        Our Teams Don’t Even Want to Pair Program
      </li>
      <li>
        The Tech Lead Coded While Everyone Watched
      </li>
      <li>
        We were Exhausted After a Few Hours
      </li>
      <li>
        We aren’t Really Very Agile.
      </li>
    </ul>
  </li>
  <li>
    4.9 Remote Mob Programming
    <ul>
      <li>
        Introduction
      </li>
      <li>
        Advantages to Working Remotely
      </li>
      <li>
        Can We “Turn Up The Good” on Working Remotely?
      </li>
      <li>
        How do we do this?
      </li>
      <li>
        Are we Effective when we are Remote?
      </li>
      <li>
        Things to Watch Out For
      </li>
      <li>
        Exploring and Experimenting
      </li>
    </ul>
  </li>
  <li>
    4.10 Frequently Asked Questions
  </li>
  <li>
    4.11 Do We Recommend Mob Programming?
    <ul>
      <li>
        Everyone Wants to Know: Do You Recommend Mob Programming?
      </li>
      <li>
        To Whose Advantage?
      </li>
      <li>
        It is Not a Panacea
      </li>
      <li>
        If You Decide to Try It
      </li>
    </ul>
  </li>
  <li>
    Part Five: Experience Reports
  </li>
  <li>
    5.1 Teaching Mob Programming
  </li>
  <li>
    5.2 Using Mob Programming as a Training Tool
  </li>
  <li>
    5.3 Mob Programming for the Introverted
    <ul>
      <li>
        Introduction
      </li>
      <li>
        Background
      </li>
      <li>
        Observations of Mob Life
      </li>
      <li>
        Mob Programming as an Introvert
      </li>
      <li>
        Change and Growth
      </li>
      <li>
        What I Have Learned
      </li>
      <li>
        Acknowledgements
      </li>
      <li>
        References
      </li>
    </ul>
  </li>
  <li>
    5.4 Corgibytes Adopts Mob Programming
  </li>
  <li>
    5.5 Sticky Mob Programming
  </li>
  <li>
    Appendix 1 - The Agile Manifesto
  </li>
  <li>
    Appendix 2 - Twelve Principles of Agile Software
  </li>
  <li>
    Notes
  </li>
</ul>
</div></div></div></div></div></div></section><div class="happiness-guarantee" id="happiness-guarantee"><div class="container--large"><h3 class="hg-title"><span>The Leanpub 60-day 100% Happiness Guarantee</span></h3><p><span>Within <strong>60 days of purchase</strong> you can get a <strong>100% refund</strong> on any Leanpub purchase, in <strong>two clicks</strong>. <br/><br/><a href="/refunds">See full terms</a></span></p></div></div><div class="royalties-counter--dark section--earth-green" id="royalties-counter"><div class="container--small"><h3 class="royalties-counter-title"><span>80% Royalties. Earn $16 on a $20 book.</span></h3><h4 class="royalties-counter__string"><span>We pay <strong>80% royalties</strong>. That's not a typo: <strong>you earn $16 on a $20 sale</strong>. If we sell <strong>5000</strong> non-refunded copies of your book or course for <strong>$20</strong>, you'll earn <strong>$80,000</strong>.<br/><br/><em>(Yes, some authors have already earned much more than that on Leanpub.)</em><br/><br/>In fact, authors have earned<span class='royalties-counter__price'><a href='/authors'>over $12 million USD</a></span>writing, publishing and selling on Leanpub.<br/><br/><strong><a href='/authors' class='link'>Learn more about writing on Leanpub</a></strong></span></h4></div></div><div class="free-updates"><div class="container--small"><h3 class="free-updates-title"><span>Free Updates. DRM Free.</span></h3><p><span>If you buy a Leanpub book, you get free updates for as long as the author updates the book! Many authors use Leanpub to publish their books in-progress, while they are writing them. All readers get free updates, regardless of when they bought the book or how much they paid (including free).<br/><br/>Most Leanpub books are available in PDF (for computers) and EPUB (for phones, tablets and Kindle). The formats that a book includes are shown at the top right corner of this page.<br/><br/>Finally, Leanpub books don't have any DRM copy-protection nonsense, so you can easily read them on any supported device.</span></p><p><a href="http://help.leanpub.com/reader-help/what-formats-do-leanpub-books-come-in"><span>Learn more about Leanpub&#x27;s ebook formats and where to read them</span></a></p></div></div><div class="become-an-author"><div class="container--small"><h3 class="baa-title"><span>Write and Publish on Leanpub</span></h3><p><span>You can use Leanpub to easily write, publish and sell in-progress and completed ebooks and online courses!<br/><br/>Leanpub is a powerful platform for serious authors, combining a simple, elegant writing and publishing workflow with a store focused on selling in-progress ebooks.<br/><br/>Leanpub is a magical typewriter for authors: just write in plain text, and to publish your ebook, just click a button. (Or, if you are producing your ebook your own way, you can even upload your own PDF and/or EPUB files and then publish with one click!) It really is that easy.</span></p><p><a href="/authors"><span>Learn more about writing on Leanpub</span></a></p></div></div></article><div class="footer"><div class="container--small"><div><h1 class="footer-logo"><a href="/"><img src="data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAAMAAAACGCAYAAACL3YV2AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAACt5JREFUeNrsXe1x2zgQpTL+L3VgXgVmKhCvgigVWKkgugosV+CkAtkVyKlAdAViKhBdgZQKdMDdMoNoKIkA8Y33ZjiyE1kCFvv27QIgkWUAAAAAAAAAAAAAAAAAAAAAAAAAAABAXBjF2Knj8Viwlwm7SvqnW3blwlvyk99bNHSJv7+z68Cumv8+Go0az/ve9q21wdC+c1TcBqzvNQjg12C3Ts4H+45ecwtfXZGDvHFiuHIMcnbe/yn1u7TwtQ0Fg5/0WrH+H0AA+wNeWnL2vk5RESFeTTkEEX7mef8r31UyKAJQOnMvRPoQ8MquF+YIr5psMCMbzALpf02EePE9bRp56vSlMOCTgLM0rgTf2fUsGxVJ7ebs+hqBDdqAUIEA1wf83iNp14lndj1eIwLZ4YFsERt4319UAkK0BCB5/2qpgPMB34gIh478njv+IhE7cDX4ritNDIoAQjH3EGm075MWcBJ8I3ssyBaTBG3BleDR5OSBNwQgx19EkNfqjIJZQurXp176ZpMIIzg+kDIRbBFgl2iqAwxIjRgB/gqeADSPv/XAoDVFF463K+8Vtw+Enp5UQq79fuW9U3rlKu3DmstH0+sINxY6YTPlabI/l+kPOuaeKYUriAx39OpbKncgZ/9Jr7WOFILWZNr+29xuYsV3bCjAnL2sDEa3N50DLqls3DnuHUZLTnI+r17ZXHE9CQhTgyr5hfXrOWj9ZcZaHvVhx64niko+9TGnfu6O5rGj78o9s0FJY6PTBsvgKxnWiZWGAV/4NuCXFI9dGwOOvyE1DcEGOY3ZUDKsTLfVRgq0UZDIdv/Idx3SLkj2aVE7PpO+vJ0Wz7K1BKnUSkO+3FAqUCn097SY5enKP5bTJf79fPpbZV8XT+3+Dl0BdpLRfk4DqOToJMVLUp6NgfRjTdGt6Nkm/t69wnftaYW4l5NRn9c9vqt05AcTGlspf4ghBTKW8wlG5c6+PdpHW5MUPdq5lvjc9bUgwPdQUb9lyVU69gepmjB0588lB2chEe1cOPwg9aL/31+J+vMexfZ+QDtnjn1iIdnePGQClDqik+VZlqHYU1snFwjcRd7tOSWh/q80tW8Zg0+EQoC5ZGeLriL6GCbO5vAdKVFnykPve9LcLtcEKCTba3Tm64Ph/krJ1+nshHAPcIjgDv3UFdn5gh27Pmf/3yTDbw753HF/AE9VeBEY1f0BCjNQecgEGEtOfVrtvCX8txeqK/IyZ+DTm1+61IH9uM7i3Tl7MORD3hFAZotAHSkBWjxQOje5Mme+zcze/D71wBa1IR/yjgBDI1hMBMgondueqXV4rrvJsG1ctw8FowBdW5RvIxxQ7uAbkQTChsFUbhZ6M+RD0jC2HVp1NTdyBRCjGifB3zTAqwy46EumdvqaVABZ5lYJEeA3CRw4f+lB3yvDvuQFAaAAjvNb2CkgBTjd7Rj0EjggNdaxKgCiP+A9TBJAZr65AgGsFpWh1QHTEAkABQCSVgCZKJPKGgBwecx1+BIUAACcEkAhx6xBAKvwoQaoDftUUApwAAGSgxfnipkiwCAFwBpAEqgN+1Q4CtCxzwMEiBy+nCxpigB3AyMBtgiYxdSTdtSGfMo5AWQcuCsSFPBR1AE2gqIpAgy9E2wM30AdYCMo+qAAv6AAyeJXdArQ95GBAhrUANZRetKOxrBvOVGAiQYjQAHSQGPYt5wQYJACaLqVEoiTAPEpQMeJ4Yj+iUDhtPggFOB2YASAAliAR8/cbAz5ljMC5Mj/AUMEyFMgANYAQIBkCPAOBUge79EQQGEX5wE1gDP4UgMcDPuYVQWQbVwNBUgeTh+X7poAp8/ER/RPD4dkCdBxWAKif2JwfWCGbgLcDmQ+FMAeph615WDIx7xWAOT/gEod4LUCDL0RBmsAqAN0+ph1AshE8J9QAOCCL+jwMXsEUJjBQQ3gFmWgCqB1tlCnAsgyEzUAoFIDaPUTnQQYxEqsAQAu6gBnCtBxSAKif6JweWCGTgKMfWE10Ft1y0CbPvaRADKsrJD/Az18IigFAIDgoJMAMnLadTjCFMORNJwcmAEFSBtl6gbQQgCFYqrCYAADagBtBTwUAIACOJDS2gSbgaDh5MAMJwrgy+EIgJln7ofkE7oIMB3IdCiAG/i2+Fgb8jmvFADRH/DGN3QRYOiBGFgDAGQVoPCJAEMPxADcwLftJ9YPzBhMAIVDC1ADoAbQoQBaDsz44MCIqAEAXb4x8YEAgxQAawCAqgLoSOGsKwDWAPyCiXO3VKHgG14ogMxiSoP8H3WAgo/o8D0vFKCBvwEafSS4GqCrc1gDAFQJkIemAO8YX+/g21rAezAEUDisADUAagCtafLQAzNuBjY2N9k5A4ZthJ+vRZqxEB3zzMDxPIbBpxQPdF169GAVMgFoXJogCWBgDaB18jfh51rX1CtFm5xU65Zecw8cvSJC1zr7GxABwlAAhYORr6EiZ69sDDy1vxGjJj3RjhPhkyVCtA7/Q+GBUt6D25jZNBgCDD0Qo1QY/B/cAXwZfCLdK13twtI9u2YaycD7/cK/w0AQ8REHidrk1lkr2WBvjv2x6fj7ZY+/W7Nroft0QKENBU/FTHw+fe7qqIY9u54MtSs31Wcf/MrXFKhLAe50RzxKSQq6JhQh8j6K0yG9bSHZCDl20/dcK1Kpin3uI3uds+trj8jGv+uR+i772PCC+loI/Z5kF6Y6z6Qb1clkwcFyfXEw5IPamSqD5RWmtxGvkIxkM/q7DX2GLWxIwWYy5KS/6Wrnjl1zSfvP6PM2Fvu9p+97ou83oVBLmQa5cv6JpOEWHZ/BjbntO/Dk8HNKK3ZHv7Cmtk162m4lONRSwuZz+i6fsKP+zHUQglJeGUxcEKCUbGR5RrL75OhLIkooWPdRBiL0pGekXwfU/y2NWeHKt2wQYCbZSNnU5snDKK8SGZcqEUpIl2KwgVQxT0FPBjMXBNCapwnyvj3Gh31fIlypE0LHViJNHFRf9sWQvUBjTUTibF+xH3fsWmVxnhPAB/yB9/EcEVrHJzs8ZHEeGFLQGLc1g66xHrtQAOW52sijfd+0YHaSTu4StUWnKthaC7gZGNWkF2BoLnyepX0kErcDL2pf6fdZwrZoVYHXCc/s9bvCareyL42GrAFIvL3qsxAFAKr+wkgz8pkAAGAUqgS4UXT+kCJ5Q9fpvvjqQnrSTtm12wmKAFO2dvsC73t770O7taML4pjeUX9FW3gN7pMqGyRvIgoC7YC/ZZJ7dnoauN32zMkw9TCdq4S+Vwp7dqoLfRf3GE0DDQj6UiCarnvwILK3g17Z3iZMhODF6yeHRSwvovn28FfbN8HQhEYpBAPXSvHIbLC01fmlwymzhU8Pc2rJQFN5O0tTqL0WkyzboKCxcTW1vbTZ2Y0Dpw8mFzVkn00otRdtZbFNhk1MBDB2M4hlIuw0RfwyYDu0+7r2MRHA5B77eUzTcwP29eytyrodW8xNBs+QCbA+RvyUaIqCG8lAkEdsj9LE9m6bxY6uNGcV80ArTh4sE7JHTj6gKz0qbLHXyp1TkQ767MyA753sa/drFm2oKpQ2GrtQKOJWKTv9GRXdnzh/Acv8QYaVwiTCQvb7VFaCLzlxk/35ZLYqkefYSIGvULPB+sh+XNM/fYadftuGL+g90yUuuPHXaXZ5e4Z0gB0pMLSrAQ0GUC3aCYMOwA8BAAAAAAAAAAAAAAAAAAAAAAAAQA/+FWAAV/eYy/UR7lcAAAAASUVORK5CYII="/></a></h1><h3 class="footer-slogan">Publish Early, Publish Often</h3></div><div><ul class="footer-list-break"><li><h5 class="footer-headings">Path</h5></li><li><div class="footer-descriptions-top">There are many paths, but the one you&#x27;re on right now on Leanpub is...</div></li><li><div> › Mobprogramming</div></li></ul></div><div class="footer-links"><ul class="footer-list"><ul class="footer-columns"><li><h5 class="footer-headings">READERS</h5></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">Newsletters</h5></li><li><a href="/newsletters">Weekly Sale</a></li><li><a href="/newsletters">Monthly Sale</a></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">Store</h5></li><li><a href="/">Home</a></li><li><a href="/redeem">Redeem a Token</a></li><li><a href="/bookstore/book?search">Search</a></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">Support</h5></li><li><a href="http://help.leanpub.com/en/articles/3788293-the-leanpub-faq">Leanpub FAQ</a></li><li><a href="http://help.leanpub.com/en/articles/4405350-leanpub-author-faq">Leanpub Author FAQ</a></li><li><a href="http://help.leanpub.com/en/">Search our Help Center</a></li><li><a href="http://help.leanpub.com/en/articles/110768-if-i-can-t-find-an-answer-to-my-question-in-this-help-center-what-should-i-do">How to Contact Us</a></li></ul><ul class="footer-columns"><li><h5 class="footer-headings">FRONTMATTER PODCAST</h5></li></ul><ul class="footer-list-break"><li><a href="/podcasts/featured">Featured Episode</a></li><li><a href="/podcasts/frontmatter">Episode List</a></li></ul><ul class="footer-columns"><li><h5 class="footer-headings">COMPANY</h5></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">About</h5></li><li><a href="/about">About Leanpub</a></li><li><a href="https://medium.com/@leanpub">Blog</a></li><li><a href="/contact">Contact</a></li><li><a href="/press">Press</a></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">Essays</h5></li><li><a href="/ai">Leanpub and AI</a></li><li><a href="/imagine_a_world">Imagine a world...</a></li><li><a href="/manifesto">Manifesto</a></li><li><a href="/covid19">COVID-19</a></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">More</h5></li><li><a href="/causes">Causes</a></li><li><a href="/accessibility">Accessibility</a></li></ul></ul><ul class="footer-list"><ul class="footer-columns"><li><h5 class="footer-headings">MEMBERSHIPS</h5></li></ul><ul class="footer-list-break"><li><a href="/reader_memberships">Reader Memberships</a></li><li><a href="/author_memberships">Author Memberships</a></li><li><a href="/membership">Your Membership</a></li></ul><ul class="footer-columns"><li><h5 class="footer-headings">AUTHORS</h5></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">Write and Publish on Leanpub</h5></li><li><a href="/create/book">Create a Book</a></li><li><a href="/create/course">Create a Course</a></li><li><a href="/course_set_admin/leanpub/course_sets/new">Create a Track</a></li><li><a href="/author_services">Author Services</a></li><li><a href="/testimonials">Testimonials</a></li><li><a href="/authors">Why Leanpub</a></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">AI-Powered Author Services</h5></li><li><a href="/translateai">TranslateAI</a></li><li><a href="/courseai">CourseAI</a></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">Author Newsletter</h5></li><li><a href="/newsletters">The Leanpub Author Update</a></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">Author Support</h5></li><li><a href="http://help.leanpub.com/author-help">Author Help Center</a></li><li><a href="https://community.leanpub.com/c/authors">Leanpub Authors Forum</a></li><li><a href="https://leanpub.com/manual/read">The Leanpub Manual</a></li><li><a href="/help/supported_languages">Supported Languages</a></li><li><a href="https://leanpub.com/lfm/read">The LFM Manual</a></li><li><a href="https://leanpub.com/markua/read">The Markua Manual</a></li><li><a href="/help/api">API Docs</a></li></ul><ul class="footer-list-break"><li><h5 class="footer-list-title">Organizations</h5></li><li><a href="/organizations">Learn More</a></li><li><a href="/p/register">Sign Up</a></li></ul><ul class="footer-columns"><li><h5 class="footer-headings">LEGAL</h5></li></ul><ul class="footer-list-break"><li><a href="/terms">Terms of Service</a></li><li><a href="/takedown">Copyright Policy</a></li><li><a href="/privacy">Privacy Policy</a></li><li><a href="/refunds">Refund Policy</a></li></ul></ul></div><p class="footer-copyright">*   *   *</p><p class="footer-copyright">Leanpub is copyright © 2010-<!-- -->2023<!-- --> <a href="http://ruboss.com">Ruboss Technology Corp.</a><br/>All rights reserved.</p><p class="footer-copyright">This site is protected by reCAPTCHA<br/>and the Google <a rel="noopener noreferrer" target="_blank" href="https://policies.google.com/privacy">Privacy Policy</a> and <a rel="noopener noreferrer" target="_blank" href="https://policies.google.com/terms">Terms of Service</a> apply.</p></div></div></div></div><ul class="react-flash-container"></ul><div class="modal-wrapper"></div><span></span></div></div>
<div class='cookies-banner alert alert--info' style='display: none'>
  Leanpub requires cookies in order to provide you the best experience.
  <a class='dismiss link'>Dismiss</a>
</div>

<script type='text/javascript'>
  window.addEventListener('load', function() {
    var shouldShowCookies = document.cookie.indexOf('should_show_cookies') !== -1

    if (shouldShowCookies) {
      var banner = document.querySelector('.cookies-banner')
      // IE < 9 check
      if (banner.style.removeProperty) {
        banner.style.removeProperty('display');
      } else {
        banner.style.removeAttribute('display');
      }
      document.querySelector('.cookies-banner').classList.add('shown')
      // Note that we have to use vanilla JS here because ujs (remote links) code doesn't live in the react app, and i don't
      // want to have to write this shit twice.
      document.querySelector('.cookies-banner .dismiss').addEventListener('click', function() {
        document.querySelector('.cookies-banner').remove()
        var xhr = new XMLHttpRequest()
        xhr.open("POST", "/api/v1/accepted_terms/dismiss_cookies", true);
        xhr.send()
      })
    }
  })
</script>

</body>
<script charSet="UTF-8" data-reactroot="">window.__data={"AdminFlag":{"all":{},"errors":{},"indexes":{},"loading":{}},"Answer":{"all":{},"errors":{},"indexes":{},"loading":{}},"Asset":{"all":{},"errors":{},"indexes":{},"loading":{}},"Author":{"all":{"6266":{"type":"Author","cause_royalty_percentage":"0.0","created_at":"2013-03-22T16:14:26.000Z","name":"Woody Zuill","position":1,"profile_blurb":"\u003Cp\u003EI'm Woody Zuill. I’ve been programming computers for over 30 years, and I'm currently the Agile Coach for a development team - the \"Mob\". For the past 15+ years I've worked continuously as an Agile Coach and\u002For developer in both large and small environments, and have trained over 20 teams and 200+ developers in Agile practices. I believe code must be simple, clean, testable, and maintainable so we can respond to change while quickly delivering working software. I have a passion for bringing unmaintainable code back into a manageable, healthy state.\u003C\u002Fp\u003E","state":"accepted","updated_at":"2017-02-08T23:13:49.000Z","username":"woody_zuill","user_id":117786,"book_id":6050,"cause_id":null,"latest_podcast_episode":null,"tiny_avatar_url":"https:\u002F\u002Fd39qdlcrvnra4b.cloudfront.net\u002Favatars\u002F117786\u002Ftiny\u002FXP2015.png?1458583066","view_invitation_path":null,"id":6266,"user":[{"id":117786,"type":"User"}],"book":[{"id":6050,"type":"Book"}]},"35010":{"type":"Author","cause_royalty_percentage":"0.0","created_at":"2016-01-27T11:45:24.000Z","name":"Kevin Meadows","position":2,"profile_blurb":"\u003Cp\u003EI have been working with software since the days of dual floppy drives (remember those?). I have worked in environments ranging from scientific research to small startups to large enterprise outfits. Along the way I always found the process of software development to be especially interesting. After watching so many Waterfall projects crash and burn and thinking \"there has to be a better way\" I could not help but wonder \"what took so long?\" when Agile methods finally appeared. When Woody showed me Mobbing I realized it was the next logical step.\u003C\u002Fp\u003E","state":"accepted","updated_at":"2017-02-08T23:13:49.000Z","username":"kmeadows","user_id":653086,"book_id":6050,"cause_id":null,"latest_podcast_episode":null,"tiny_avatar_url":"https:\u002F\u002Fsecure.gravatar.com\u002Favatar\u002F49d77cc4751e2d2bf29133ac7cd87914?r=pg&d=mm","view_invitation_path":null,"id":35010,"user":[{"id":653086,"type":"User"}],"book":[{"id":6050,"type":"Book"}]}},"errors":{},"indexes":{},"loading":{},"stats":{}},"AuthorServicesBook":{"all":{},"errors":{},"indexes":{},"loading":{}},"Book":{"all":{"6050":{"type":"Book","about_the_book":"\u003Cp\u003E\u003Cstrong\u003E\u003Cem\u003ETo our valued readers: We thank for your purchases and support over the years. We have retired this version of the book because we have a second edition available with a new publisher. Those who have purchased the first edition will still be able to download it from LeanPub.  \u003C\u002Fem\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003E \u003C\u002Fp\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cem\u003EThe second edition includes new material on teams, the power of flow, remote Mob Programming, and more. It is available at \u003C\u002Fem\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\u003Cp\u003E \u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fa.co\u002Fd\u002FdmFuQal\" target=\"_blank\"\u003Ehttps:\u002F\u002Fa.co\u002Fd\u002FdmFuQal\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp\u003E \u003C\u002Fp\u003E\u003Cp\u003E \u003C\u002Fp\u003E\u003Cp\u003E\"All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer\" - We call it \"Mob Programming\". With dual projectors, one computer, two keyboards, and a very collaborative approach we use this approach to super-charge our development efforts and deliver high value software quickly.\u003C\u002Fp\u003E\u003Cp\u003EIn this book we share our \"Mob Programming\" style. We'll cover the techniques we use in our daily work , how we discovered this way of working, the benefits we see from \"Mobbing\", the problems we've overcome, and how you can incorporate some of our ideas even though you don't have a way to adopt Mob Programming full time.\u003C\u002Fp\u003E","author_count":2,"author_community_preview_short_url":null,"author_network_preview_short_url":null,"author_preview_short_url":null,"author_sample_preview_short_url":null,"authors_are_editors":false,"available_downloadable_epub":true,"available_downloadable_pdf":true,"categories":[{"id":11,"slug":"software","description":"","mature_content":false,"created_at":"2012-06-11T19:12:39.000Z","updated_at":"2020-11-12T06:14:20.000Z","can_be_short":false,"parent_category_id":53,"name":"Software","book_categories_count":460},{"id":16,"slug":"agile","description":"","mature_content":false,"created_at":"2012-06-11T19:12:39.000Z","updated_at":"2020-11-06T04:24:47.000Z","can_be_short":false,"parent_category_id":1,"name":"Agile","book_categories_count":533},{"id":121,"slug":"teamwork","description":"","mature_content":false,"created_at":"2015-10-03T21:29:32.000Z","updated_at":"2015-10-03T21:29:32.000Z","can_be_short":false,"parent_category_id":1,"name":"Teamwork","book_categories_count":256}],"cc_license_text":"Creative Commons Attribution","cc_slug":"by","cc_version":null,"clicky_analytics_code":"","community_edition_about_the_book":"","community_edition_callout_quote":"","community_edition_epub_url":"\u002Fmobprogramming\u002Fce\u002Fepub","community_edition_pdf_url":"\u002Fmobprogramming\u002Fce\u002Fpdf","community_edition_require_firstname":"required","community_edition_require_lastname":"required","community_edition_teaser_text":"","community_edition_whats_included":"","copyright_type":"custom","contact_author_method":"email","contact_author_url":null,"created_at":"2013-03-22T16:14:26.000Z","description":"&quot;All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer&quot; - We call it &quot;Mob Programming&quot;. With dual projectors, one computer, two keyboards, and a very collaborative approach we use this practice to super-charge our development efforts and deliver high value software quickly.","forum_url":null,"forced_markua":false,"free_purchase_requires_membership":true,"enabled_forums":false,"embargo":false,"name":"Mob Programming","epub_available":true,"epub_community_edition_available":false,"epub_download_url":null,"epub_file_size":null,"free_purchase_only":false,"google_analytics_code":"","generate_community_edition":null,"generated_on_leanpub":true,"has_epub_sample":true,"has_pdf_sample":false,"has_sample":true,"image":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_featured?1620374294","installments_completed":0,"installments_planned":null,"input_format":"lfm","language_code3":"eng","language_id":124,"language_name":"English","last_published_at":"2021-04-06T17:48:10.000Z","last_published_sync_mode":"dropbox","leanpub_app_available":true,"mature_content":false,"new_edition_id":null,"page_count_published":235,"pdf_available":true,"pdf_community_edition_available":false,"pre_publish_mailchimp_list_id":"leanpub","preview_generated_at":"2021-03-24T20:31:29.000Z","primary_author_id":6266,"publisher_id":1,"sample_epub_url":"https:\u002F\u002Fs3.amazonaws.com\u002Fsamples.leanpub.com\u002Fmobprogramming-sample.epub?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=0XBXHW3Q9GGV69BT7E82%2F20230424%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230424T014122Z&X-Amz-Expires=518400&X-Amz-SignedHeaders=host&X-Amz-Signature=55d8a28f5c44bd58de118ed3e4b52db0b29d39e7e69041a5af44ecfcc6439ebb","sample_url":"https:\u002F\u002Fs3.amazonaws.com\u002Fsamples.leanpub.com\u002Fmobprogramming-sample.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=0XBXHW3Q9GGV69BT7E82%2F20230424%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230424T014122Z&X-Amz-Expires=518400&X-Amz-SignedHeaders=host&X-Amz-Signature=863f78d8b66463b30384143b9ec41af70398f76f646d728dfbdb99a5cffbd86c","show_also_by_authors":false,"show_community_edition_on_book_page":false,"show_num_readers":true,"show_feedback_page":true,"show_installments":null,"show_page_count":true,"show_read_link":"none","show_word_count":false,"slug":"mobprogramming","state":"retired","subtitle":"A Whole Team Approach","suggested_tweet":"","sync_mode":"dropbox_cold_storage","tagline":"\"All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer\" - We call it \"Mob Programming\". With dual projectors, one computer, two keyboards, and a very collaborative approach we use this practice to super-charge our development efforts and deliver high value software quickly.","thank_you_message":"We appreciate your interest in Mob Programming, and we'd love to hear from you about ideas to improve or grow the book.  Please send us an email - the address is in the \"Help Us Write This Book\" chapter in the book.","title":"Mob Programming","json_toc":"[{\"level\":2,\"title\":\"Acknowledgements\",\"quiz_type\":null,\"path\":\"#leanpub-auto-acknowledgements\",\"file_count\":1,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"Part One: Introduction\",\"quiz_type\":null,\"path\":\"#leanpub-auto-part-one-introduction\",\"file_count\":2,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"1.1 What is Mob Programming?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-what-is-mob-programming\",\"file_count\":3,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"How We Started\",\"quiz_type\":null,\"path\":\"#leanpub-auto-how-we-started\",\"file_count\":3,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"What’s in a Name?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-whats-in-a-name\",\"file_count\":3,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Why this Book?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-why-this-book\",\"file_count\":3,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"1.2 Set the Stage for Great Things\",\"quiz_type\":null,\"path\":\"#leanpub-auto-set-the-stage-for-great-things\",\"file_count\":4,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"It’s About the Environment\",\"quiz_type\":null,\"path\":\"#leanpub-auto-its-about-the-environment\",\"file_count\":4,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"We Work Better when We Work Together.\",\"quiz_type\":null,\"path\":\"#leanpub-auto-we-work-better-when-we-work-together\",\"file_count\":4,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Stage was Set\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-stage-was-set\",\"file_count\":4,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"1.3 A View of the Room\",\"quiz_type\":null,\"path\":\"#leanpub-auto-a-view-of-the-room\",\"file_count\":5,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"A little peek at what it looks like\",\"quiz_type\":null,\"path\":\"#leanpub-auto-a-little-peek-at-what-it-looks-like\",\"file_count\":5,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"1.4 See for Yourself\",\"quiz_type\":null,\"path\":\"#leanpub-auto-see-for-yourself\",\"file_count\":6,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Watch a video of a full day of work in only 3 minutes!\",\"quiz_type\":null,\"path\":\"#leanpub-auto-watch-a-video-of-a-full-day-of-work-in-only-3-minutes\",\"file_count\":6,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"1.5 How We Discovered Mob Programming\",\"quiz_type\":null,\"path\":\"#leanpub-auto-how-we-discovered-mob-programming\",\"file_count\":7,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Driver-Navigator Model\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-driver-navigator-model\",\"file_count\":7,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Coding Dojo Sessions\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-coding-dojo-sessions\",\"file_count\":7,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Studying and Practicing Together\",\"quiz_type\":null,\"path\":\"#leanpub-auto-studying-and-practicing-together\",\"file_count\":7,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Next (In)Obvious Steps\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-next-inobvious-steps\",\"file_count\":7,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"1.6 Quick Start Guide\",\"quiz_type\":null,\"path\":\"#leanpub-auto-quick-start-guide\",\"file_count\":8,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"Part Two: The Details\",\"quiz_type\":null,\"path\":\"#leanpub-auto-part-two-the-details\",\"file_count\":9,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"2.1 The Team\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-team\",\"file_count\":10,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Mob Programming Team\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-mob-programming-team\",\"file_count\":10,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"2.2 The Workspace Setup\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-workspace-setup\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Introduction\",\"quiz_type\":null,\"path\":\"#leanpub-auto-introduction\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Area\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-area\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Computer\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-computer\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Projectors or Monitors\",\"quiz_type\":null,\"path\":\"#leanpub-auto-projectors-or-monitors\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Keyboard\u002FMouse\",\"quiz_type\":null,\"path\":\"#leanpub-auto-keyboardmouse\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Chairs and Tables\",\"quiz_type\":null,\"path\":\"#leanpub-auto-chairs-and-tables\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Telephone and Email\",\"quiz_type\":null,\"path\":\"#leanpub-auto-telephone-and-email\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Ergonomics\",\"quiz_type\":null,\"path\":\"#leanpub-auto-ergonomics\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Private Work Area\",\"quiz_type\":null,\"path\":\"#leanpub-auto-private-work-area\",\"file_count\":11,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"2.3 The Driver-Navigator Model In-Depth\",\"quiz_type\":null,\"path\":\"#DN-InDepth\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Navigators and Navigation\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-navigators-and-navigation\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Driver and Driving\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-driver-and-driving\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Consultation - The Pause for Clarity\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-consultation---the-pause-for-clarity\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Conflicting Ideas\",\"quiz_type\":null,\"path\":\"#leanpub-auto-conflicting-ideas\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"An Example\",\"quiz_type\":null,\"path\":\"#leanpub-auto-an-example\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Rotating the Roles\",\"quiz_type\":null,\"path\":\"#leanpub-auto-rotating-the-roles\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"A Timer\",\"quiz_type\":null,\"path\":\"#leanpub-auto-a-timer\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Summary\",\"quiz_type\":null,\"path\":\"#leanpub-auto-summary\",\"file_count\":12,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"2.4 Why Would We Work This Way?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-why-would-we-work-this-way\",\"file_count\":13,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"There are Many Benefits from Working as a Mob Programming team\",\"quiz_type\":null,\"path\":\"#leanpub-auto-there-are-many-benefits-from-working-as-a-mob-programming-team\",\"file_count\":13,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"It’s a Trick Question\",\"quiz_type\":null,\"path\":\"#leanpub-auto-its-a-trick-question\",\"file_count\":13,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Typical Answers\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-typical-answers\",\"file_count\":13,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Real Answer: We Work this Way Because the Team Decided to Work this Way\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-real-answer-we-work-this-way-because-the-team-decided-to-work-this-way\",\"file_count\":13,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Provide a Safe Place Where We can Discover Awesomeness\",\"quiz_type\":null,\"path\":\"#leanpub-auto-provide-a-safe-place-where-we-can-discover-awesomeness\",\"file_count\":13,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"2.5 How Can We Work This Way?\",\"quiz_type\":null,\"path\":\"#Kindness\",\"file_count\":14,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"A Principle to Live By\",\"quiz_type\":null,\"path\":\"#leanpub-auto-a-principle-to-live-by\",\"file_count\":14,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"It’s the People, not the Code\",\"quiz_type\":null,\"path\":\"#leanpub-auto-its-the-people-not-the-code\",\"file_count\":14,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Our Story\",\"quiz_type\":null,\"path\":\"#leanpub-auto-our-story\",\"file_count\":14,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Kindness, Consideration, and Respect\",\"quiz_type\":null,\"path\":\"#leanpub-auto-kindness-consideration-and-respect\",\"file_count\":14,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"Part Three: Productivity\",\"quiz_type\":null,\"path\":\"#leanpub-auto-part-three-productivity\",\"file_count\":15,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.1 The Productivity Question\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-productivity-question\",\"file_count\":16,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"How Can Five People At One Computer Be Productive?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-how-can-five-people-at-one-computer-be-productive\",\"file_count\":16,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Changing the question\",\"quiz_type\":null,\"path\":\"#leanpub-auto-changing-the-question\",\"file_count\":16,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"What we found with Mob Programming\",\"quiz_type\":null,\"path\":\"#leanpub-auto-what-we-found-with-mob-programming\",\"file_count\":16,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Another way to think about it\",\"quiz_type\":null,\"path\":\"#leanpub-auto-another-way-to-think-about-it\",\"file_count\":16,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.2 Problems That Faded Away\",\"quiz_type\":null,\"path\":\"#FadingProblems\",\"file_count\":17,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"It’s The System?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-its-the-system\",\"file_count\":17,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"A Backpacking Trip\",\"quiz_type\":null,\"path\":\"#leanpub-auto-a-backpacking-trip\",\"file_count\":17,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Management Overhead\",\"quiz_type\":null,\"path\":\"#leanpub-auto-management-overhead\",\"file_count\":17,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Working Well Together\",\"quiz_type\":null,\"path\":\"#leanpub-auto-working-well-together\",\"file_count\":17,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"What’s Coming Up in the Next Chapters\",\"quiz_type\":null,\"path\":\"#leanpub-auto-whats-coming-up-in-the-next-chapters\",\"file_count\":17,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.3 Problem: Faulty Communications\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-faulty-communications\",\"file_count\":18,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Communication problems are pervasive, numerous, and paralyzing.\",\"quiz_type\":null,\"path\":\"#leanpub-auto-communication-problems-are-pervasive-numerous-and-paralyzing\",\"file_count\":18,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Problem: Getting Answers to Questions can take a lot of time.\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-getting-answers-to-questions-can-take-a-lot-of-time\",\"file_count\":18,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Problem: Communication by Email\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-communication-by-email\",\"file_count\":18,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Problem: Communication by Documentation\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-communication-by-documentation\",\"file_count\":18,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.4 Problem: Issues with Decision Making\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-issues-with-decision-making\",\"file_count\":19,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Decisions are a Good Thing\",\"quiz_type\":null,\"path\":\"#leanpub-auto-decisions-are-a-good-thing\",\"file_count\":19,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.5 Problem: Doing More Than What is Barely Sufficient\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-doing-more-than-what-is-barely-sufficient\",\"file_count\":20,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Should We Ever do More than Enough?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-should-we-ever-do-more-than-enough\",\"file_count\":20,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Examples of “Too Much”\",\"quiz_type\":null,\"path\":\"#leanpub-auto-examples-of-too-much\",\"file_count\":20,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"How Mob Programming has Helped\",\"quiz_type\":null,\"path\":\"#leanpub-auto-how-mob-programming-has-helped\",\"file_count\":20,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Conclusion\",\"quiz_type\":null,\"path\":\"#leanpub-auto-conclusion\",\"file_count\":20,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.6 Problem: Technical Debt\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-technical-debt\",\"file_count\":21,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Alligator in the Pond\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-alligator-in-the-pond\",\"file_count\":21,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"It Faded Away\",\"quiz_type\":null,\"path\":\"#leanpub-auto-it-faded-away\",\"file_count\":21,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Many Forms of Technical Debt\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-many-forms-of-technical-debt\",\"file_count\":21,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Conclusion\",\"quiz_type\":null,\"path\":\"#leanpub-auto-conclusion-1\",\"file_count\":21,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.7 Problem: Thrashing\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-thrashing\",\"file_count\":22,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Distractions, Context Switching, Interruptions: This is Thrashing\",\"quiz_type\":null,\"path\":\"#leanpub-auto-distractions-context-switching-interruptions-this-is-thrashing\",\"file_count\":22,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Thrashing of Programmers\",\"quiz_type\":null,\"path\":\"#leanpub-auto-thrashing-of-programmers\",\"file_count\":22,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Who Gets Thrashed?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-who-gets-thrashed\",\"file_count\":22,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Why is Thrashing Harmful?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-why-is-thrashing-harmful\",\"file_count\":22,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"How it Faded Away for Us\",\"quiz_type\":null,\"path\":\"#leanpub-auto-how-it-faded-away-for-us\",\"file_count\":22,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Recap\",\"quiz_type\":null,\"path\":\"#leanpub-auto-recap\",\"file_count\":22,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.8 Problem: Politics\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-politics\",\"file_count\":23,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Many faces of politics\",\"quiz_type\":null,\"path\":\"#leanpub-auto-many-faces-of-politics\",\"file_count\":23,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"It Faded Away\",\"quiz_type\":null,\"path\":\"#leanpub-auto-it-faded-away-1\",\"file_count\":23,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.9 Problem: Meetings\",\"quiz_type\":null,\"path\":\"#leanpub-auto-problem-meetings\",\"file_count\":24,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"“Please, sir, I want some more meetings.”\",\"quiz_type\":null,\"path\":\"#leanpub-auto-please-sir-i-want-some-more-meetings\",\"file_count\":24,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.10 A Simple Cost Analysis of Mob Programming\",\"quiz_type\":null,\"path\":\"#leanpub-auto-a-simple-cost-analysis-of-mob-programming\",\"file_count\":25,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Sensitivity Analysis\",\"quiz_type\":null,\"path\":\"#leanpub-auto-sensitivity-analysis\",\"file_count\":25,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Summary\",\"quiz_type\":null,\"path\":\"#leanpub-auto-summary-1\",\"file_count\":25,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"References\",\"quiz_type\":null,\"path\":\"#leanpub-auto-references\",\"file_count\":25,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"3.11 The Power of Flow\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-power-of-flow\",\"file_count\":26,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"References\",\"quiz_type\":null,\"path\":\"#leanpub-auto-references-1\",\"file_count\":26,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"Part Four: A Few Other Things\",\"quiz_type\":null,\"path\":\"#leanpub-auto-part-four-a-few-other-things\",\"file_count\":27,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.1 What is the Ideal Number of Team Members?\",\"quiz_type\":null,\"path\":\"#IdealNumberTeamMembers\",\"file_count\":28,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.2 Continuous Learning\",\"quiz_type\":null,\"path\":\"#leanpub-auto-continuous-learning\",\"file_count\":29,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Providing an Environment where Learning is “Amplified”\",\"quiz_type\":null,\"path\":\"#leanpub-auto-providing-an-environment-where-learning-is-amplified\",\"file_count\":29,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Study and Practice Together\",\"quiz_type\":null,\"path\":\"#leanpub-auto-study-and-practice-together\",\"file_count\":29,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Friday Afternoon Practice\",\"quiz_type\":null,\"path\":\"#leanpub-auto-friday-afternoon-practice\",\"file_count\":29,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Mob Programming and Learning\",\"quiz_type\":null,\"path\":\"#leanpub-auto-mob-programming-and-learning\",\"file_count\":29,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Our Morning Hour of Learning\",\"quiz_type\":null,\"path\":\"#leanpub-auto-our-morning-hour-of-learning\",\"file_count\":29,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Amplifying Learning\",\"quiz_type\":null,\"path\":\"#leanpub-auto-amplifying-learning\",\"file_count\":29,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.3 Exposed\",\"quiz_type\":null,\"path\":\"#leanpub-auto-exposed\",\"file_count\":30,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Fear of Being Exposed\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-fear-of-being-exposed\",\"file_count\":30,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Why It Might be Frightening\",\"quiz_type\":null,\"path\":\"#leanpub-auto-why-it-might-be-frightening\",\"file_count\":30,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"What can we do about this?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-what-can-we-do-about-this\",\"file_count\":30,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Mistakes are Part of the Process\",\"quiz_type\":null,\"path\":\"#leanpub-auto-mistakes-are-part-of-the-process\",\"file_count\":30,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"This is Voluntary\",\"quiz_type\":null,\"path\":\"#leanpub-auto-this-is-voluntary\",\"file_count\":30,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Conclusion\",\"quiz_type\":null,\"path\":\"#leanpub-auto-conclusion-2\",\"file_count\":30,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.4 Ergonomics, Health, and Sanity\",\"quiz_type\":null,\"path\":\"#Ergonomics\",\"file_count\":31,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Let’s Take Care of Ourselves\",\"quiz_type\":null,\"path\":\"#leanpub-auto-lets-take-care-of-ourselves\",\"file_count\":31,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Projectors, Chairs, Keyboards, and Screens\",\"quiz_type\":null,\"path\":\"#leanpub-auto-projectors-chairs-keyboards-and-screens\",\"file_count\":31,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Stretching, Talking Walks, Taking Breaks\",\"quiz_type\":null,\"path\":\"#leanpub-auto-stretching-talking-walks-taking-breaks\",\"file_count\":31,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Preventing the Spread of Illness\",\"quiz_type\":null,\"path\":\"#leanpub-auto-preventing-the-spread-of-illness\",\"file_count\":31,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Sanity\",\"quiz_type\":null,\"path\":\"#leanpub-auto-sanity\",\"file_count\":31,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"In Conclusion\",\"quiz_type\":null,\"path\":\"#leanpub-auto-in-conclusion\",\"file_count\":31,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.5 Retrospectives: Reflect, Tune, and Adjust Frequently\",\"quiz_type\":null,\"path\":\"#leanpub-auto-retrospectives-reflect-tune-and-adjust-frequently\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"If You Only have Time to get Good at One Thing, Start with Retrospectives\",\"quiz_type\":null,\"path\":\"#leanpub-auto-if-you-only-have-time-to-get-good-at-one-thing-start-with-retrospectives\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"An Example of a Typical Retrospective\",\"quiz_type\":null,\"path\":\"#leanpub-auto-an-example-of-a-typical-retrospective\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"An Affinity Mapping Example\",\"quiz_type\":null,\"path\":\"#leanpub-auto-an-affinity-mapping-example\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Give it a Name\",\"quiz_type\":null,\"path\":\"#leanpub-auto-give-it-a-name\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Here is What We Decided to Try\",\"quiz_type\":null,\"path\":\"#leanpub-auto-here-is-what-we-decided-to-try\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"A Daily Practice Period\",\"quiz_type\":null,\"path\":\"#leanpub-auto-a-daily-practice-period\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Another Retrospective, Another Step Forward: The 12 Days of Index\",\"quiz_type\":null,\"path\":\"#leanpub-auto-another-retrospective-another-step-forward-the-12-days-of-index\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Things to Notice\",\"quiz_type\":null,\"path\":\"#leanpub-auto-things-to-notice\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Takeaway\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-takeaway\",\"file_count\":32,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.6 Turn Up The Good\",\"quiz_type\":null,\"path\":\"#leanpub-auto-turn-up-the-good\",\"file_count\":33,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Something that Works Well: Turn Up the Good\",\"quiz_type\":null,\"path\":\"#leanpub-auto-something-that-works-well-turn-up-the-good\",\"file_count\":33,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Solving Problems - What’s Wrong with That?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-solving-problems---whats-wrong-with-that\",\"file_count\":33,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Turn Up The Good\",\"quiz_type\":null,\"path\":\"#leanpub-auto-turn-up-the-good-1\",\"file_count\":33,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.7 Relaxed and Sustainable\",\"quiz_type\":null,\"path\":\"#RelxedSustainable\",\"file_count\":34,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"This is Wearing Us Out!\",\"quiz_type\":null,\"path\":\"#leanpub-auto-this-is-wearing-us-out\",\"file_count\":34,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Problem\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-problem\",\"file_count\":34,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"We Don’t Need to Be a Hero\",\"quiz_type\":null,\"path\":\"#leanpub-auto-we-dont-need-to-be-a-hero\",\"file_count\":34,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Take a Break\",\"quiz_type\":null,\"path\":\"#leanpub-auto-take-a-break\",\"file_count\":34,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Make it Sustainable\",\"quiz_type\":null,\"path\":\"#leanpub-auto-make-it-sustainable\",\"file_count\":34,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.8 Barriers to Mob Programming\",\"quiz_type\":null,\"path\":\"#leanpub-auto-barriers-to-mob-programming\",\"file_count\":35,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"My Manager Won’t Let Us\",\"quiz_type\":null,\"path\":\"#leanpub-auto-my-manager-wont-let-us\",\"file_count\":35,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"We Don’t Have a Space to Do It\",\"quiz_type\":null,\"path\":\"#leanpub-auto-we-dont-have-a-space-to-do-it\",\"file_count\":35,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"We Don’t Know How to Get Started\",\"quiz_type\":null,\"path\":\"#leanpub-auto-we-dont-know-how-to-get-started\",\"file_count\":35,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Our Teams Don’t Even Want to Pair Program\",\"quiz_type\":null,\"path\":\"#leanpub-auto-our-teams-dont-even-want-to-pair-program\",\"file_count\":35,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"The Tech Lead Coded While Everyone Watched\",\"quiz_type\":null,\"path\":\"#leanpub-auto-the-tech-lead-coded-while-everyone-watched\",\"file_count\":35,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"We were Exhausted After a Few Hours\",\"quiz_type\":null,\"path\":\"#leanpub-auto-we-were-exhausted-after-a-few-hours\",\"file_count\":35,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"We aren’t Really Very Agile.\",\"quiz_type\":null,\"path\":\"#leanpub-auto-we-arent-really-very-agile\",\"file_count\":35,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.9 Remote Mob Programming\",\"quiz_type\":null,\"path\":\"#RemoteMob\",\"file_count\":36,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Introduction\",\"quiz_type\":null,\"path\":\"#leanpub-auto-introduction-1\",\"file_count\":36,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Advantages to Working Remotely\",\"quiz_type\":null,\"path\":\"#leanpub-auto-advantages-to-working-remotely\",\"file_count\":36,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Can We “Turn Up The Good” on Working Remotely?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-can-we-turn-up-the-good-on-working-remotely\",\"file_count\":36,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"How do we do this?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-how-do-we-do-this\",\"file_count\":36,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Are we Effective when we are Remote?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-are-we-effective-when-we-are-remote\",\"file_count\":36,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Things to Watch Out For\",\"quiz_type\":null,\"path\":\"#leanpub-auto-things-to-watch-out-for\",\"file_count\":36,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Exploring and Experimenting\",\"quiz_type\":null,\"path\":\"#leanpub-auto-exploring-and-experimenting\",\"file_count\":36,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.10 Frequently Asked Questions\",\"quiz_type\":null,\"path\":\"#leanpub-auto-frequently-asked-questions\",\"file_count\":37,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"4.11 Do We Recommend Mob Programming?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-do-we-recommend-mob-programming\",\"file_count\":38,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Everyone Wants to Know: Do You Recommend Mob Programming?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-everyone-wants-to-know-do-you-recommend-mob-programming\",\"file_count\":38,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"To Whose Advantage?\",\"quiz_type\":null,\"path\":\"#leanpub-auto-to-whose-advantage\",\"file_count\":38,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"It is Not a Panacea\",\"quiz_type\":null,\"path\":\"#leanpub-auto-it-is-not-a-panacea\",\"file_count\":38,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"If You Decide to Try It\",\"quiz_type\":null,\"path\":\"#leanpub-auto-if-you-decide-to-try-it\",\"file_count\":38,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"Part Five: Experience Reports\",\"quiz_type\":null,\"path\":\"#leanpub-auto-part-five-experience-reports\",\"file_count\":39,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"5.1 Teaching Mob Programming\",\"quiz_type\":null,\"path\":\"#leanpub-auto-teaching-mob-programming\",\"file_count\":40,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"5.2 Using Mob Programming as a Training Tool\",\"quiz_type\":null,\"path\":\"#leanpub-auto-using-mob-programming-as-a-training-tool\",\"file_count\":41,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"5.3 Mob Programming for the Introverted\",\"quiz_type\":null,\"path\":\"#leanpub-auto-mob-programming-for-the-introverted\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Introduction\",\"quiz_type\":null,\"path\":\"#leanpub-auto-introduction-2\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Background\",\"quiz_type\":null,\"path\":\"#leanpub-auto-background\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Observations of Mob Life\",\"quiz_type\":null,\"path\":\"#leanpub-auto-observations-of-mob-life\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Mob Programming as an Introvert\",\"quiz_type\":null,\"path\":\"#leanpub-auto-mob-programming-as-an-introvert\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Change and Growth\",\"quiz_type\":null,\"path\":\"#leanpub-auto-change-and-growth\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"What I Have Learned\",\"quiz_type\":null,\"path\":\"#leanpub-auto-what-i-have-learned\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"Acknowledgements\",\"quiz_type\":null,\"path\":\"#leanpub-auto-acknowledgements-1\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":3,\"title\":\"References\",\"quiz_type\":null,\"path\":\"#leanpub-auto-references-2\",\"file_count\":42,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"5.4 Corgibytes Adopts Mob Programming\",\"quiz_type\":null,\"path\":\"#leanpub-auto-corgibytes-adopts-mob-programming\",\"file_count\":43,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"5.5 Sticky Mob Programming\",\"quiz_type\":null,\"path\":\"#leanpub-auto-sticky-mob-programming\",\"file_count\":44,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"Appendix 1 - The Agile Manifesto\",\"quiz_type\":null,\"path\":\"#leanpub-auto-appendix-1---the-agile-manifesto\",\"file_count\":45,\"quiz_id\":null,\"section_num\":null},{\"level\":2,\"title\":\"Appendix 2 - Twelve Principles of Agile Software\",\"quiz_type\":null,\"path\":\"#leanpub-auto-appendix-2---twelve-principles-of-agile-software\",\"file_count\":46,\"quiz_id\":null,\"section_num\":null}]","title_page_url_s_mini":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_mini?1620374294","title_page_url_s_mini2x":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_mini2x?1620374294","title_page_url_s_list":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_list?1620374294","title_page_url_s_list2x":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_list2x?1620374294","title_page_url_s_shelf":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_shelf?1620374294","title_page_url_s_shelf2x":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_shelf2x?1620374294","title_page_url_s_featured":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_featured?1620374294","title_page_url_s_featured2x":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_featured2x?1620374294","title_page_url_s_hero":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_hero?1620374294","title_page_url_s_hero2x":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_hero2x?1620374294","toc":"\u003Cul class='toc no-parts'\u003E\n  \u003Cli\u003E\n    Acknowledgements\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    Part One: Introduction\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    1.1 What is Mob Programming?\n    \u003Cul\u003E\n      \u003Cli\u003E\n        How We Started\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        What’s in a Name?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Why this Book?\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    1.2 Set the Stage for Great Things\n    \u003Cul\u003E\n      \u003Cli\u003E\n        It’s About the Environment\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        We Work Better when We Work Together.\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Stage was Set\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    1.3 A View of the Room\n    \u003Cul\u003E\n      \u003Cli\u003E\n        A little peek at what it looks like\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    1.4 See for Yourself\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Watch a video of a full day of work in only 3 minutes!\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    1.5 How We Discovered Mob Programming\n    \u003Cul\u003E\n      \u003Cli\u003E\n        The Driver-Navigator Model\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Coding Dojo Sessions\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Studying and Practicing Together\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Next (In)Obvious Steps\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    1.6 Quick Start Guide\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    Part Two: The Details\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    2.1 The Team\n    \u003Cul\u003E\n      \u003Cli\u003E\n        The Mob Programming Team\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    2.2 The Workspace Setup\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Introduction\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Area\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Computer\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Projectors or Monitors\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Keyboard\u002FMouse\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Chairs and Tables\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Telephone and Email\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Ergonomics\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Private Work Area\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    2.3 The Driver-Navigator Model In-Depth\n    \u003Cul\u003E\n      \u003Cli\u003E\n        The Navigators and Navigation\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Driver and Driving\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Consultation - The Pause for Clarity\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Conflicting Ideas\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        An Example\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Rotating the Roles\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        A Timer\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Summary\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    2.4 Why Would We Work This Way?\n    \u003Cul\u003E\n      \u003Cli\u003E\n        There are Many Benefits from Working as a Mob Programming team\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        It’s a Trick Question\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Typical Answers\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Real Answer: We Work this Way Because the Team Decided to Work this Way\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Provide a Safe Place Where We can Discover Awesomeness\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    2.5 How Can We Work This Way?\n    \u003Cul\u003E\n      \u003Cli\u003E\n        A Principle to Live By\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        It’s the People, not the Code\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Our Story\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Kindness, Consideration, and Respect\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    Part Three: Productivity\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.1 The Productivity Question\n    \u003Cul\u003E\n      \u003Cli\u003E\n        How Can Five People At One Computer Be Productive?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Changing the question\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        What we found with Mob Programming\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Another way to think about it\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.2 Problems That Faded Away\n    \u003Cul\u003E\n      \u003Cli\u003E\n        It’s The System?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        A Backpacking Trip\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Management Overhead\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Working Well Together\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        What’s Coming Up in the Next Chapters\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.3 Problem: Faulty Communications\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Communication problems are pervasive, numerous, and paralyzing.\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Problem: Getting Answers to Questions can take a lot of time.\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Problem: Communication by Email\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Problem: Communication by Documentation\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.4 Problem: Issues with Decision Making\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Decisions are a Good Thing\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.5 Problem: Doing More Than What is Barely Sufficient\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Should We Ever do More than Enough?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Examples of “Too Much”\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        How Mob Programming has Helped\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Conclusion\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.6 Problem: Technical Debt\n    \u003Cul\u003E\n      \u003Cli\u003E\n        The Alligator in the Pond\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        It Faded Away\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Many Forms of Technical Debt\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Conclusion\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.7 Problem: Thrashing\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Distractions, Context Switching, Interruptions: This is Thrashing\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Thrashing of Programmers\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Who Gets Thrashed?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Why is Thrashing Harmful?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        How it Faded Away for Us\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Recap\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.8 Problem: Politics\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Many faces of politics\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        It Faded Away\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.9 Problem: Meetings\n    \u003Cul\u003E\n      \u003Cli\u003E\n        “Please, sir, I want some more meetings.”\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.10 A Simple Cost Analysis of Mob Programming\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Sensitivity Analysis\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Summary\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        References\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    3.11 The Power of Flow\n    \u003Cul\u003E\n      \u003Cli\u003E\n        References\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    Part Four: A Few Other Things\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.1 What is the Ideal Number of Team Members?\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.2 Continuous Learning\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Providing an Environment where Learning is “Amplified”\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Study and Practice Together\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Friday Afternoon Practice\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Mob Programming and Learning\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Our Morning Hour of Learning\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Amplifying Learning\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.3 Exposed\n    \u003Cul\u003E\n      \u003Cli\u003E\n        The Fear of Being Exposed\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Why It Might be Frightening\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        What can we do about this?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Mistakes are Part of the Process\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        This is Voluntary\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Conclusion\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.4 Ergonomics, Health, and Sanity\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Let’s Take Care of Ourselves\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Projectors, Chairs, Keyboards, and Screens\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Stretching, Talking Walks, Taking Breaks\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Preventing the Spread of Illness\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Sanity\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        In Conclusion\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.5 Retrospectives: Reflect, Tune, and Adjust Frequently\n    \u003Cul\u003E\n      \u003Cli\u003E\n        If You Only have Time to get Good at One Thing, Start with Retrospectives\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        An Example of a Typical Retrospective\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        An Affinity Mapping Example\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Give it a Name\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Here is What We Decided to Try\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        A Daily Practice Period\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Another Retrospective, Another Step Forward: The 12 Days of Index\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Things to Notice\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Takeaway\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.6 Turn Up The Good\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Something that Works Well: Turn Up the Good\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Solving Problems - What’s Wrong with That?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Turn Up The Good\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.7 Relaxed and Sustainable\n    \u003Cul\u003E\n      \u003Cli\u003E\n        This is Wearing Us Out!\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Problem\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        We Don’t Need to Be a Hero\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Take a Break\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Make it Sustainable\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.8 Barriers to Mob Programming\n    \u003Cul\u003E\n      \u003Cli\u003E\n        My Manager Won’t Let Us\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        We Don’t Have a Space to Do It\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        We Don’t Know How to Get Started\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Our Teams Don’t Even Want to Pair Program\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        The Tech Lead Coded While Everyone Watched\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        We were Exhausted After a Few Hours\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        We aren’t Really Very Agile.\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.9 Remote Mob Programming\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Introduction\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Advantages to Working Remotely\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Can We “Turn Up The Good” on Working Remotely?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        How do we do this?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Are we Effective when we are Remote?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Things to Watch Out For\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Exploring and Experimenting\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.10 Frequently Asked Questions\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    4.11 Do We Recommend Mob Programming?\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Everyone Wants to Know: Do You Recommend Mob Programming?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        To Whose Advantage?\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        It is Not a Panacea\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        If You Decide to Try It\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    Part Five: Experience Reports\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    5.1 Teaching Mob Programming\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    5.2 Using Mob Programming as a Training Tool\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    5.3 Mob Programming for the Introverted\n    \u003Cul\u003E\n      \u003Cli\u003E\n        Introduction\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Background\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Observations of Mob Life\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Mob Programming as an Introvert\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Change and Growth\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        What I Have Learned\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        Acknowledgements\n      \u003C\u002Fli\u003E\n      \u003Cli\u003E\n        References\n      \u003C\u002Fli\u003E\n    \u003C\u002Ful\u003E\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    5.4 Corgibytes Adopts Mob Programming\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    5.5 Sticky Mob Programming\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    Appendix 1 - The Agile Manifesto\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    Appendix 2 - Twelve Principles of Agile Software\n  \u003C\u002Fli\u003E\n  \u003Cli\u003E\n    Notes\n  \u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n","translated_from_id":null,"tweet_text":"Looking forward to reading Mob Programming","unpublished_sample":false,"updated_at":"2022-11-11T20:50:48.000Z","vimeo_url":"","available_web_book":true,"word_count_published":null,"youtube_url":"","external_forum_url":null,"num_copies_sold":1080,"page_count":235,"percent_complete":100,"seo_title":"Mob Programming  by Woody Zuill et al. [Leanpub PDF\u002FiPad\u002FKindle]","title_direction":"ltr","past_editions_reader_count":[],"id":6050,"past_edition":null,"new_edition":null,"default_package":[{"id":4786,"type":"Package"}],"language":[{"id":124,"type":"Language"}],"translated_from":null,"accepted_authors":[{"id":6266,"type":"Author"},{"id":35010,"type":"Author"}],"positioned_accepted_authors":[{"id":6266,"type":"Author"},{"id":35010,"type":"Author"}],"packages":[{"id":4786,"type":"Package"}],"published_bundles":[],"positioned_testimonials":[],"past_editions":[],"translations":[],"contributors":[{"id":1435,"type":"Contributor"},{"id":1430,"type":"Contributor"},{"id":1409,"type":"Contributor"}]}},"errors":{},"indexes":{"{\"landing\":true}":[6050]},"loading":{"{\"landing\":true}":false},"stats":{}},"BookPurchase":{"all":{},"errors":{},"indexes":{},"loading":{}},"Bundle":{"all":{},"errors":{},"indexes":{},"loading":{}},"BundlePackage":{"all":{},"errors":{},"indexes":{},"loading":{}},"BundlePurchase":{"all":{},"errors":{},"indexes":{},"loading":{}},"CartItem":{"all":{},"errors":{},"indexes":{},"loading":{}},"CartPurchase":{"all":{},"errors":{},"indexes":{},"loading":{}},"Category":{"all":{},"errors":{},"indexes":{},"loading":{}},"Cause":{"all":{},"errors":{},"indexes":{"{\"book_slug\":\"mobprogramming\"}":[]},"loading":{"{\"book_slug\":\"mobprogramming\"}":false}},"Chapter":{"all":{},"errors":{},"indexes":{},"loading":{},"dirty":false},"Choice":{"all":{},"errors":{},"indexes":{},"loading":{}},"CommunityEditionSignup":{"all":{},"errors":{},"indexes":{},"loading":{}},"Contributor":{"all":{"1409":{"type":"Contributor","avatar_url_tiny":"missing_avatar.jpg","avatar_url_small":"missing_avatar.jpg","avatar_url_medium":"missing_avatar.jpg","avatar_url_full":"missing_avatar.jpg","blurb":"","githubname":"","instagramname":"","linkedinname":"","name":"Nancy Van Schooenderwoert","title":"","twittername":"","username":null,"user_id":null,"book_id":6050,"id":1409,"user":null},"1430":{"type":"Contributor","avatar_url_tiny":"https:\u002F\u002Fs3.amazonaws.com\u002Favatars.leanpub.com\u002Favatars\u002F1430\u002Ftiny\u002FMike2015.jpg?1459552729","avatar_url_small":"https:\u002F\u002Fs3.amazonaws.com\u002Favatars.leanpub.com\u002Favatars\u002F1430\u002Fsmall\u002FMike2015.jpg?1459552729","avatar_url_medium":"https:\u002F\u002Fs3.amazonaws.com\u002Favatars.leanpub.com\u002Favatars\u002F1430\u002Fmedium\u002FMike2015.jpg?1459552729","avatar_url_full":"https:\u002F\u002Fs3.amazonaws.com\u002Favatars.leanpub.com\u002Favatars\u002F1430\u002Ffull\u002FMike2015.jpg?1459552729","blurb":"","githubname":"","instagramname":"","linkedinname":"","name":"Mike","title":"Bowler","twittername":"mike_bowler","username":null,"user_id":null,"book_id":6050,"id":1430,"user":null},"1435":{"type":"Contributor","avatar_url_tiny":"missing_avatar.jpg","avatar_url_small":"missing_avatar.jpg","avatar_url_medium":"missing_avatar.jpg","avatar_url_full":"missing_avatar.jpg","blurb":"","githubname":"","instagramname":"","linkedinname":"","name":"Aaron","title":"Griffith","twittername":"","username":null,"user_id":null,"book_id":6050,"id":1435,"user":null}},"errors":{},"indexes":{},"loading":{}},"CorrectChoice":{"all":{},"errors":{},"indexes":{},"loading":{}},"Coupon":{"all":{},"errors":{},"indexes":{},"loading":{}},"Course":{"all":{},"errors":{},"indexes":{},"loading":{}},"CourseAttempt":{"all":{},"errors":{},"indexes":{},"loading":{}},"CourseAuthor":{"all":{},"errors":{},"indexes":{},"loading":{}},"CoursePurchase":{"all":{},"errors":{},"indexes":{},"loading":{}},"CourseSet":{"all":{},"errors":{},"indexes":{},"loading":{}},"CourseSetAttempt":{"all":{},"errors":{},"indexes":{},"loading":{}},"CourseSetPackage":{"all":{},"errors":{},"indexes":{},"loading":{}},"CourseSetPurchase":{"all":{},"errors":{},"indexes":{},"loading":{}},"CourseVersion":{"all":{},"errors":{},"indexes":{},"loading":{}},"CurrentUser":{"all":{},"errors":{},"indexes":{},"loading":{},"id":null},"Editor":{"all":{},"errors":{},"indexes":{},"loading":{}},"EditorFile":{"all":{},"errors":{},"indexes":{},"loading":{}},"EditorResource":{"all":{},"errors":{},"indexes":{},"loading":{}},"GoogleDocsBook":{"all":{},"errors":{},"indexes":{},"loading":{}},"Invitation":{"all":{},"errors":{},"indexes":{},"loading":{}},"Language":{"all":{"124":{"type":"Language","books_count":22238,"code":"eng","created_at":"2015-04-24T03:26:30.000Z","name":"English","code2":"en","direction":"ltr","updated_at":"2023-04-24T01:38:47.000Z","id":124}},"errors":{},"indexes":{},"loading":{}},"Notification":{"all":{},"errors":{},"indexes":{},"loading":{}},"Order":{"all":{},"errors":{},"indexes":{},"loading":{}},"OrderItem":{"all":{},"errors":{},"indexes":{},"loading":{}},"Package":{"all":{"4786":{"type":"Package","created_at":"2013-12-09T20:27:51.000Z","packagable_id":6050,"packagable_type":"Book","packagable_only":true,"packagable_slug":"mobprogramming","allow_free_purchases":false,"description":null,"featured":false,"flat_fee":"0.0","free_minimum":false,"free_purchase_only":false,"free_purchase_requires_membership":true,"is_package":true,"maximum_price":60,"minimum_paid_price":"20.0","name":"The Book","package":true,"ratio_of_revenue_to_authors":"1.0","ratio_of_revenue_to_causes":"0.0","royalties_to_revenue_ratio":"0.8","short_about_the_book":null,"short_description":"","short_tagline":"\u003Cp\u003E\"All the brilliant minds working together on the same thing, at the same time, in the same...\u003C\u002Fp\u003E","show_what_author_gets":true,"show_what_cause_gets":false,"slug":"book","subtitle":"A Whole Team Approach","suggested_price":"30.0","stripe_name":"Mob Programming","stripe_package_name":"The Book","stripe_description":"The Book","stripe_image":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_list2x?1620374294","tagline":"\u003Cp\u003E\"All the brilliant minds working together on the same thing, at the same time, in the same space, and at the same computer\" - We call it \"Mob Programming\". With dual projectors, one computer, two keyboards, and a very collaborative approach we use this practice to super-charge our development efforts and deliver high value software quickly.\u003C\u002Fp\u003E","title":"Mob Programming","title_page_url_s_list":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_list?1620374294","title_page_url_s_shelf":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_shelf?1620374294","title_page_url_s_featured":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_featured?1620374294","title_page_url_s_hero":"https:\u002F\u002Fd2sofvawe08yqg.cloudfront.net\u002Fmobprogramming\u002Fs_hero?1620374294","updated_at":"2016-03-17T22:34:06.000Z","id":4786,"packagable":[{"id":6050,"type":"Book"}],"asset_packagings":[],"assets":[]}},"errors":{},"indexes":{},"loading":{}},"PackageDiscount":{"all":{},"errors":{},"indexes":{},"loading":{}},"PendingProduct":{"all":{},"errors":{},"indexes":{},"loading":{}},"Plan":{"all":{},"errors":{},"indexes":{},"loading":{}},"Podcast":{"all":{},"errors":{},"indexes":{},"loading":{}},"PodcastEpisode":{"all":{},"errors":{},"indexes":{},"loading":{}},"PossibleReader":{"all":{},"errors":{},"indexes":{},"loading":{},"showForm":true},"Publisher":{"all":{"1":{"links":{"self":"\u002Fp\u002Fleanpub"},"type":"Publisher","created_at":"2012-10-20T04:42:39.000Z","can_use_books_tab":true,"can_use_bundles_tab":true,"can_use_courses_tab":true,"can_use_course_sets_tab":true,"publisher_blurb":"\u003Cp\u003ELeanpub empowers authors to self-publish in-progress ebooks.\u003C\u002Fp\u003E","reversed_logo_url":"missing_avatar.jpg","logo_url":"https:\u002F\u002Fs3.amazonaws.com\u002Fpublisherlogos.leanpub.com\u002Flogos\u002F1\u002Fverso_page\u002Fleanpub_logo.png?1501739906","name":"Leanpub","slug":"leanpub","university":false,"about_university":null,"cover_url":"missing_avatar.jpg","cover_uploaded":false,"updated_at":"2017-08-03T05:58:28.000Z","has_subscription":true,"id":1,"editors":[]}},"errors":null,"indexes":{"{\"book_slug\":\"mobprogramming\"}":[1]},"loading":{"{\"book_slug\":\"mobprogramming\"}":false},"index":{},"slugValidity":null,"userValidity":null,"creating":false},"Purchase":{"all":{},"errors":{},"indexes":{},"loading":{},"markingAsPinged":{}},"PurchasedPackage":{"all":{},"errors":{},"indexes":{},"loading":{}},"Question":{"all":{},"errors":{},"indexes":{},"loading":{}},"QuestionAttempt":{"all":{},"errors":{},"indexes":{},"loading":{}},"QuestionWithHint":{"all":{},"errors":{},"indexes":{},"loading":{}},"Quiz":{"all":{},"errors":{},"indexes":{},"loading":{}},"QuizAttempt":{"all":{},"errors":{},"indexes":{},"loading":{}},"RetiredQuiz":{"all":{},"errors":{},"indexes":{},"loading":{}},"ServicePurchase":{"all":{},"errors":{},"indexes":{},"loading":{}},"ShelfBook":{"all":{},"errors":{},"indexes":{},"loading":{}},"ShelfSpot":{"all":{},"errors":{},"indexes":{},"loading":{},"shelfBooks":{},"full":[],"taxData":null,"options":null},"ShelfSpotOption":{"all":{},"errors":{},"indexes":{},"loading":{}},"ShoppingCart":{"cart":null,"errors":null,"loading":false},"SimpleAuthor":{"all":{},"errors":{},"indexes":{},"loading":{}},"SimpleBook":{"all":{},"errors":{},"indexes":{},"loading":{}},"SimpleBundle":{"all":{},"errors":{},"indexes":{},"loading":{}},"SimpleCourse":{"all":{},"errors":{},"indexes":{},"loading":{}},"SimpleCourseAuthor":{"all":{},"errors":{},"indexes":{},"loading":{}},"SimpleCourseSet":{"all":{},"errors":{},"indexes":{},"loading":{}},"StoreBook":{"all":{},"errors":{},"indexes":{},"loading":{}},"Subscription":{"all":{},"errors":{},"loading":{},"taxData":{}},"TaxInfo":{"all":{},"errors":{},"indexes":{},"loading":{}},"Testimonial":{"all":{},"errors":{},"indexes":{},"loading":{}},"Theme":{"all":{},"errors":{},"indexes":{},"loading":{}},"Transcript":{"all":{},"errors":{},"indexes":{},"loading":{}},"User":{"all":{"117786":{"type":"User","avatar_url_full":"https:\u002F\u002Fd39qdlcrvnra4b.cloudfront.net\u002Favatars\u002F117786\u002Ffull\u002FXP2015.png?1458583066","avatar_url_medium":"https:\u002F\u002Fd39qdlcrvnra4b.cloudfront.net\u002Favatars\u002F117786\u002Fmedium\u002FXP2015.png?1458583066","avatar_url_small":"https:\u002F\u002Fd39qdlcrvnra4b.cloudfront.net\u002Favatars\u002F117786\u002Fsmall\u002FXP2015.png?1458583066","avatar_url_tiny":"https:\u002F\u002Fd39qdlcrvnra4b.cloudfront.net\u002Favatars\u002F117786\u002Ftiny\u002FXP2015.png?1458583066","created_at":"2013-03-15T18:02:08.000Z","githubname":"","instagramname":null,"linkedinname":null,"name":"Woody Zuill","latest_podcast_episode":null,"profile_blurb":"\u003Cp\u003EI'm Woody Zuill. I’ve been programming computers for over 30 years, and I'm currently the Agile Coach for a development team - the \"Mob\". For the past 15+ years I've worked continuously as an Agile Coach and\u002For developer in both large and small environments, and have trained over 20 teams and 200+ developers in Agile practices. I believe code must be simple, clean, testable, and maintainable so we can respond to change while quickly delivering working software. I have a passion for bringing unmaintainable code back into a manageable, healthy state.\u003C\u002Fp\u003E","twittername":"woodyzuill","unpaid_royalties":"0.0","updated_at":"2022-08-09T14:36:35.000Z","username":"woody_zuill","wishlist_count":6,"wishlist_id":1967159,"given_names_pp":"Woody","family_name_pp":"Zuill","id":117786},"653086":{"type":"User","avatar_url_full":"https:\u002F\u002Fsecure.gravatar.com\u002Favatar\u002F49d77cc4751e2d2bf29133ac7cd87914?r=pg&d=mm","avatar_url_medium":"https:\u002F\u002Fsecure.gravatar.com\u002Favatar\u002F49d77cc4751e2d2bf29133ac7cd87914?r=pg&d=mm","avatar_url_small":"https:\u002F\u002Fsecure.gravatar.com\u002Favatar\u002F49d77cc4751e2d2bf29133ac7cd87914?r=pg&d=mm","avatar_url_tiny":"https:\u002F\u002Fsecure.gravatar.com\u002Favatar\u002F49d77cc4751e2d2bf29133ac7cd87914?r=pg&d=mm","created_at":"2016-01-26T17:54:40.000Z","githubname":"","instagramname":null,"linkedinname":null,"name":"kevin","latest_podcast_episode":null,"profile_blurb":"\u003Cp\u003EI have been working with software since the days of dual floppy drives (remember those?). I have worked in environments ranging from scientific research to small startups to large enterprise outfits. Along the way I always found the process of software development to be especially interesting. After watching so many Waterfall projects crash and burn and thinking \"there has to be a better way\" I could not help but wonder \"what took so long?\" when Agile methods finally appeared.\u003C\u002Fp\u003E","twittername":"","unpaid_royalties":"0.0","updated_at":"2023-03-24T15:59:50.000Z","username":"kmeadows","wishlist_count":0,"wishlist_id":1897773,"given_names_pp":"kevin","family_name_pp":"","id":653086}},"errors":null,"indexes":{},"loading":{},"sessionErrors":null,"errorMap":{},"gdpr_status":null},"UserDropdownData":{"all":{},"errors":{},"indexes":{},"loading":{}},"Wishlist":{"all":{},"errors":{},"indexes":{},"loading":{}},"WishlistItem":{"all":{},"errors":{},"indexes":{},"loading":{}},"WritingPurchase":{"all":{},"errors":null,"loading":{},"slugValidity":null,"userValidity":null,"creating":false},"AuthorRoyalty":{"royalties":null},"AuthorPlan":{"plan":null},"Audio":{"src":null,"isPaused":true,"isMuted":false,"isLoaded":false,"currentTime":0,"duration":0},"CoursePage":{"all":{},"loading":{},"errors":{}},"Flash":{"all":{}},"Geoip":{"country_code":"US"},"Mailchimp":{"errors":{},"loading":{},"subscriptionStatus":{}},"MetricsEntry":{"all":{"total_author_royalties":"12480138.29"},"errors":{},"indexes":{},"loading":{}},"NumReader":{"all":{},"errors":{},"loading":{}},"Portion":{"all":{},"errors":{},"indexes":{},"loading":{}},"ReadUrl":{"all":{},"loading":{},"errors":{}},"Request":{"requests":{"https:\u002F\u002Fleanpub.com\u002Fapi\u002Fv1\u002Fcache\u002Fbooks\u002Fmobprogramming.json?landing=true&preset_include=book_show":false,"https:\u002F\u002Fleanpub.com\u002Fapi\u002Fv1\u002Fcache\u002Fcauses.json?book_slug=mobprogramming":false,"https:\u002F\u002Fleanpub.com\u002Fapi\u002Fv1\u002Fcache\u002Fpublishers.json?book_slug=mobprogramming&include=editors":false,"https:\u002F\u002Fleanpub.com\u002Fapi\u002Fv1\u002Fcache\u002Fmetrics_entries\u002Fstatistic\u002Ftotal_author_royalties.json?":false},"wait":0,"statusCode":200},"router":{"location":{"pathname":"\u002F","search":"","hash":"","key":"6lrg56"},"action":"POP"},"Translation":{"loadedTranslations":{},"loadingTranslation":false,"currentLocale":"en","errors":{}},"UI":{"syntax":"color","minimap":false,"showHeader":true,"gutterActionsPosition":{},"settingsOpen":false,"currentBookSlug":null,"courseSidebarClosed":false,"visualEditorFocusMode":false,"currentEditorTab":"manuscript","fontSize":16,"packagableType":null,"gutterActionsMenuVisibility":false,"currentFilenames":{"manuscript":null,"resources":null,"images":null,"code":null},"gutterActionsVisibility":false,"bodyIsLocked":false,"showFooter":true,"headerHTML":"\u003Cspan\u003EEarn \u003Cb\u003E80% Royalties\u003C\u002Fb\u003E publishing \u003Cb\u003Eebooks\u003C\u002Fb\u003E and \u003Cb\u003Ecourses\u003C\u002Fb\u003E on Leanpub\u003C\u002Fspan\u003E","darkMode":false,"focusMode":false}}</script>
<script src="https://leanpub.com/assets/polyfill-bundle-bdee6d38a01843bb53df.js"></script>
<script src="https://leanpub.com/assets/app-bundle-96e9e265a3610bd65e3a.js"></script>
<!-- Twitter universal website tag code -->
<script>
!function(e,t,n,s,u,a){e.twq||(s=e.twq=function(){s.exe?s.exe.apply(s,arguments):s.queue.push(arguments);
},s.version='1.1',s.queue=[],u=t.createElement(n),u.async=!0,u.src='//static.ads-twitter.com/uwt.js',
a=t.getElementsByTagName(n)[0],a.parentNode.insertBefore(u,a))}(window,document,'script');
// Insert Twitter Pixel ID and Standard Event data below
twq('init','nw0pa');
twq('track','PageView');
</script>
<!-- End Twitter universal website tag code -->
</html>

  recorded_at: Mon, 24 Apr 2023 11:17:22 GMT
recorded_with: VCR 6.1.0
